<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hummingman</title>
  <subtitle>Real Developer Ship...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2017-04-05T09:27:04.551Z</updated>
  <id>/</id>
  
  <author>
    <name>Anderson</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>.Net知识整理</title>
    <link href="/2017/03/31/Net-Core%E4%B9%8B%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>/2017/03/31/Net-Core之配置详解/</id>
    <published>2017-03-31T06:59:48.000Z</published>
    <updated>2017-04-05T09:27:04.551Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了.Net core CLI的相关命令和配置.</p>
<a id="more"></a>
<h4 id="Global-json配置"><a href="/2017/03/31/Net-Core之配置详解/#Global-json配置" class="headerlink" title="Global.json配置"></a>Global.json配置</h4><p>在global.json中可以配置.NET Core的SDK版本属性：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">"sdk": &#123;</div><div class="line">    "version": "1.0.0-preview2-003121"</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="dotnet命令"><a href="/2017/03/31/Net-Core之配置详解/#dotnet命令" class="headerlink" title="dotnet命令"></a>dotnet命令</h4><p>dotnet命令用来启动应用程序和.Net Core Tools.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dotnet build</div><div class="line">dotnet pack</div><div class="line">dotnet restore</div><div class="line">dotnet run</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">命令</th>
<th style="text-align:left">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>dotnet build</code></td>
<td style="text-align:left">编译.Net core应用程序</td>
</tr>
<tr>
<td style="text-align:left"><code>dotnet pack</code></td>
<td style="text-align:left">打包.Net core应用程序成dll</td>
</tr>
<tr>
<td style="text-align:left"><code>dotnet restore</code></td>
<td style="text-align:left">重新初始化依赖</td>
</tr>
<tr>
<td style="text-align:left"><code>dotnet run</code></td>
<td style="text-align:left">启动应用程序</td>
</tr>
<tr>
<td style="text-align:left"><code>dotnet publish</code></td>
<td style="text-align:left">发布应用程序</td>
</tr>
</tbody>
</table>
<h4 id="Net架构设计"><a href="/2017/03/31/Net-Core之配置详解/#Net架构设计" class="headerlink" title=".Net架构设计"></a>.Net架构设计</h4><p><img src="/2017/03/31/Net-Core之配置详解/001.png" alt="架构设计图"></p>
<p>综上所述，如果要使用微软的.Net环境，就必须实现底层的.Net Standard，但是由于历史原因，.Net Framework本身是不具备跨平台的，因为.Net Framework的很多API都集成了Windows操作系统的相关API，所以无法实现跨平台。所以，.Net Core则是在.Net Standard的基础上重新实现了一遍，该实现不直接依赖操作系统环境，所以.Net Core应用可以部署在Linux或者IOS上。</p>
<h4 id="Net运行时之-Net-Core"><a href="/2017/03/31/Net-Core之配置详解/#Net运行时之-Net-Core" class="headerlink" title=".Net运行时之 .Net Core"></a>.Net运行时之 .Net Core</h4><p>.Net Core是一个跨平台的运行时环境，实现了.Net Standard库,.Net Standard是微软.Net上的底层库，目前使用到.Net Core的主要有ASP.Net Core和UWP，前者用于实现跨平台的WEB项目解决方案，后者则用于Windows Phone操作系统和Windows10的通用应用程序。</p>
<h4 id="Net运行时之-Net-Framework"><a href="/2017/03/31/Net-Core之配置详解/#Net运行时之-Net-Framework" class="headerlink" title=".Net运行时之 .Net Framework"></a>.Net运行时之 .Net Framework</h4><p>.Net Framework于2002年诞生，并实现了.Net标准库，使用.Net Framework可以实现任何.Net Standard里有的API，主要包含了额外的Windows操作系统的支持，比如WPF</p>
<h4 id="Net运行时之-Mono"><a href="/2017/03/31/Net-Core之配置详解/#Net运行时之-Mono" class="headerlink" title=".Net运行时之 Mono"></a>.Net运行时之 Mono</h4><p>Mono是Xamarian应用程序的运行时环境，这个环境也实现了.Net标准库，同时额外增加了对IOS和Android的API支持，也就是说，使用Mono，就可以实现使用C#开发IOS和Android应用。</p>
<h4 id="Net-平台支持"><a href="/2017/03/31/Net-Core之配置详解/#Net-平台支持" class="headerlink" title=".Net 平台支持"></a>.Net 平台支持</h4><table>
<thead>
<tr>
<th>.Net Standard版本</th>
<th>1.0</th>
<th>1.1</th>
<th>1.2</th>
<th>1.3</th>
<th>1.4</th>
<th>1.5</th>
<th>1.6</th>
<th>2.0</th>
</tr>
</thead>
<tbody>
<tr>
<td>.Net Core</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>1.0</td>
<td>2.0</td>
</tr>
<tr>
<td>.Net Framework</td>
<td>-</td>
<td>4.5</td>
<td>4.5.1</td>
<td>4.6</td>
<td>4.6.1</td>
<td>4.6.2</td>
<td>vNext</td>
<td>4.6.1</td>
</tr>
</tbody>
</table>
<p>.Net Core需要.Net Standard 1.6及其以上版本才能运行</p>
<h4 id="Net-Framework与CLI"><a href="/2017/03/31/Net-Core之配置详解/#Net-Framework与CLI" class="headerlink" title=".Net Framework与CLI"></a>.Net Framework与CLI</h4><table>
<thead>
<tr>
<th>.Net Framework</th>
<th>CLI</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.0</td>
<td>1.0</td>
</tr>
<tr>
<td>1.1</td>
<td>1.1</td>
</tr>
<tr>
<td>2.0</td>
<td>2.0</td>
</tr>
<tr>
<td>3.0</td>
<td>2.0</td>
</tr>
<tr>
<td>3.5</td>
<td>2.0</td>
</tr>
<tr>
<td>4</td>
<td>4</td>
</tr>
<tr>
<td>4.5</td>
<td>4</td>
</tr>
<tr>
<td>4.6</td>
<td>4</td>
</tr>
</tbody>
</table>
<h4 id="using语法糖"><a href="/2017/03/31/Net-Core之配置详解/#using语法糖" class="headerlink" title="using语法糖"></a>using语法糖</h4><p>using语法糖用于声明非托管资源，并在作用域结束后自动释放资源时使用。所有的非托管资源必须实现IDisposable接口，并手动释放，而如果在using中使用非托管资源则可以实现自动释放。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">using(StreamReader reader = new StreamReader())&#123;</div><div class="line">    reader.Close();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="try-catch-finally捕获异常"><a href="/2017/03/31/Net-Core之配置详解/#try-catch-finally捕获异常" class="headerlink" title="try/catch/finally捕获异常"></a>try/catch/finally捕获异常</h4><p>.Net的异常捕获使用try…catch…finally进行捕获。finally用于回收资源，不管有没有出现异常。如果需要自定义异常，则只需要自定义一个类，继承异常基类Exception即可。一种替代使用try..catch捕获异常的办法就是通过特定的确切条件判断去避免异常。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if(conn.State != ConnectionState.Closed)&#123;</div><div class="line">    conn.Close();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>应当使用抛出异常来替代返回错误码。</p>
<h4 id="自定义异常"><a href="/2017/03/31/Net-Core之配置详解/#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h4><p>自定义异常需要继承异常基类Exception，具有三个构造函数，分别是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Exception()</div><div class="line">Exception(String)</div><div class="line">Exception(String,Exception)</div></pre></td></tr></table></figure></p>
<p>对于自定义的异常，需要保证所有的域中都有相应的异常，比如多项目之间的通讯，若返回异常相关的信息，则必须多个项目中都必须具有此异常的声明。对于具有原子性操作的语句块，则需要在捕获异常时，回退整个语句块以保证事务的完整性。</p>
<h4 id="垃圾回收"><a href="/2017/03/31/Net-Core之配置详解/#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h4><p>垃圾回收机制是.Net代码管理平台上的一个非常重要的功能之一，垃圾回收(GC)管理空间分配和释放内容，而你不需要关心如何去申请空间和释放内存或者管理对象在内存中的声明周期。所有的空间分配都在new一个新的对象是创建，内存分配的速度是极快的 ，当没有足够的空间时，GC就会回收没有用到的垃圾内存，然后释放空间，这个过程，成为垃圾回收(Garbage Collection)</p>
<p>垃圾回收在.NET中是以自动内存回收者的角色存在的。这样做的好处是：</p>
<ul>
<li>允许你开发过程中不用去手动释放对象的内存空间。</li>
<li>所有的对象都在内存栈中高效地被管理。</li>
<li>被重新声明的对象不会被重新使用，且会被清除内存。</li>
<li>提供内存安全，确保一个对象不会被引用到其他对象的数据。</li>
</ul>
<p>GC具有三代，第0代是对象被第一次申请的时候，对象通常活不过第0代，因为通常情况下在这段时间内就会被GC回收，第0代回收很快，因为引用的栈的数据基本上很少。第1代是指在第0代中存活下来得那部分，第0代和第1代的栈数据都比较小，这是因为对象通常在低代级别就被回收，或者被移动到了高代级别，而第2代都是存活了很长时间的对象，在第1代和第2代中都存活下来的对象，这一代的栈数据可能会非常大。</p>
<p>GC有额外的专门用于存储大对象的地方称之为LOH（Large Object Heap,大对象栈），LOH专门用于超过85,000字节的对象。一个超过85K个元素的对象会被存储在LOH上。这种大对象不会被送往GC三代空间，而是直接被送往LOH。</p>
<p>GC2代和LOH一般用于运行了很长时间的应用成程序或者处理非常大数据量的数据的时候。大型服务端应用程序通常情况下每10s就有上GB的栈数据。GC提供了大量的技术去缩减由此造成的程序阻塞。GC一般都是后台运行的，当然也提供了一定的显式设置和调用，从而最大限度地提高应用的性能。</p>
<h4 id="Generic-Types"><a href="/2017/03/31/Net-Core之配置详解/#Generic-Types" class="headerlink" title="Generic Types"></a>Generic Types</h4><p>在C#中，如果使用的是LINQ，那么被作用的对象一定是IEnumerable,如果使用Entity Framework，那么所有的方法都返回的是IQueryable的对象。在Generic Types中，很多地方都使用了泛型T。</p>
<p>在.Net1.0中所有泛型集合都只能是object类型的对象，也就是说，当要转化为特定类型的数据时，就不可避免地进行装箱和拆箱，这是一个很坑爹的地方，如果类型转错了，还会抛出异常。所以在.Net 2.0开始就支持泛型集合，允许集合中存储特定类型对象的数据。</p>
<p>使用泛型集合List<t>和非泛型集合ArrayList对数据的处理的耗费时间差别是很大的。这是因为，如果使用了泛型，那么Runtime知道数据是什么类型的，直接根据类型对数据进行操作，否则，就必须在内存中存储每个对象，然后将对象装化为特定类型后再处理。</t></p>
<h4 id="Base-Types"><a href="/2017/03/31/Net-Core之配置详解/#Base-Types" class="headerlink" title="Base Types"></a>Base Types</h4><p>.Net中的数据类型不是值类型就是引用数据类型。值类型即变量与数据存储在一起的类型，引用数据类型则是变量存储的只是数据的一个引用，真正的数据存放在另外一个地方的数据类型。</p>
<p>.Net中有五个基本的归类：</p>
<ul>
<li>Classes </li>
<li>Structures</li>
<li>Enumerations</li>
<li>Interfaces</li>
<li>Delegates</li>
</ul>
<h4 id="Class的修饰符"><a href="/2017/03/31/Net-Core之配置详解/#Class的修饰符" class="headerlink" title="Class的修饰符"></a>Class的修饰符</h4><p><strong>sealed</strong>:指定该类无法被继承<br><strong>implements</strong>:指定该类实现另外一个类<br><strong>abstract</strong>:指定该类为抽象类，且不能被实例化，需要继承这个类，然后重写其中定义的方法<br><strong>inherits</strong>:继承类可以使用任意的基类公有数据，且可以直接重写或覆盖基类的公有方法<br><strong>exported</strong>:指定类在程序集外可见<br><strong>not exported</strong>:指定类在程序集外不可见</p>
<h4 id="Interface"><a href="/2017/03/31/Net-Core之配置详解/#Interface" class="headerlink" title="Interface"></a>Interface</h4><ul>
<li>一个接口可以可以被声明为任意的可访问性，但是接口的成员都必须是public的</li>
<li>接口不能定义构造函数</li>
<li>接口不能定义字段</li>
<li>接口只能被实例化而不能定义静态变量</li>
</ul>
<p>也就是说，接口只是定义行为而不实现行为，具体的逻辑实现由实现类重写。</p>
<h4 id="Delegates"><a href="/2017/03/31/Net-Core之配置详解/#Delegates" class="headerlink" title="Delegates"></a>Delegates</h4><p>委托和C++的函数指针相似，主要用着事件处理和回调。和函数指针不同的是，委托是安全的，可验证的和类型安全的。一个委托类型可以表现具任意的实例化方法或者静态方法。</p>
<h4 id="字符串格式化"><a href="/2017/03/31/Net-Core之配置详解/#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h4><ul>
<li>十进制装化为十六进制</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> a = <span class="number">12</span>;</div><div class="line"><span class="keyword">string</span> hex = a.ToString(<span class="string">"X"</span>);</div></pre></td></tr></table></figure>
<ul>
<li>装化为货币格式</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> cost = <span class="number">1111.23</span>;</div><div class="line"><span class="keyword">string</span> money = cost.ToString(<span class="string">"C"</span>,<span class="keyword">new</span> System.Globalization.CultureInfo(<span class="string">"en-US"</span>));</div><div class="line"><span class="comment">//money = $1,111.23</span></div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">格式标识符</th>
<th style="text-align:left">全称</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">“C” or “C”</td>
<td style="text-align:left">Currency</td>
<td style="text-align:left">支持所有数字类型，<br>将数字转化为货币格式</td>
<td style="text-align:left">123.456(“C”,en-US)<span style="color:green">$123.456</span><br>123.456 (“C”, fr-FR)<span style="color:green">123,46 €</span><br>123.456 (“C”, ja-JP)<span style="color:green">¥123</span><br>-123.456 (“C3”, en-US)<span style="color:green">($123.456)</span><br>-123.456 (“C3”, fr-FR)<span style="color:green">-123,456 €</span><br>-123.456 (“C3”, ja-JP)<span style="color:green">-¥123.456</span></td>
</tr>
<tr>
<td style="text-align:left">“D” or “d”</td>
<td style="text-align:left">Decimal</td>
<td style="text-align:left">支持所有整型数字</td>
<td style="text-align:left">1234 (“D”)<span style="color:green">1234</span><br>-1234 (“D6”)<span style="color:green">-001234</span></td>
</tr>
<tr>
<td style="text-align:left">“E” or “e”</td>
<td style="text-align:left">Exponential (scientific)</td>
<td style="text-align:left">支持所有数字类型，<br>将数字幻化为科学计数法</td>
<td style="text-align:left">1052.0329112756 (“E”, en-US)<span style="color:green">1.052033E+003</span><br>1052.0329112756 (“e”, fr-FR)<span style="color:green">1,052033e+003</span><br>-1052.0329112756 (“e2”,en-US)<span style="color:green">-1.05e+003</span><br>-1052.0329112756 (“E2”,fr_FR)<span style="color:green">-1,05E+003</span></td>
</tr>
<tr>
<td style="text-align:left">“F” or “f”</td>
<td style="text-align:left">Fixed-point</td>
<td style="text-align:left">支持整数和任意的负数，<br>精度调整</td>
<td style="text-align:left">1234.567 (“F”, en-US)<span style="color:green">1234.57</span><br>1234.567 (“F”, de-DE)<span style="color:green">1234,57</span><br>1234 (“F1”, en-US)<span style="color:green">1234.0</span><br>1234 (“F1”, de-DE)<span style="color:green">1234,0</span><br>-1234.56 (“F4”, en-US)<span style="color:green"> -1234.5600</span><br>-1234.56 (“F4”, de-DE)<span style="color:green"> -1234,5600</span></td>
</tr>
<tr>
<td style="text-align:left">“G” or “g”</td>
<td style="text-align:left">General</td>
<td style="text-align:left">所有数字类型</td>
<td style="text-align:left">-123.456 (“G”, en-US)<span style="color:green">-123.456</span><br>-123.456 (“G”, sv-SE)<span style="color:green">-123,456</span><br>123.4546 (“G4”, en-US)<span style="color:green">123.5</span><br>123.4546 (“G4”, sv-SE)<span style="color:green">123,5</span><br>-1.234567890e-25 (“G”, en-US)<span style="color:green"> 1.23456789E-25</span><br>-1.234567890e-25 (“G”, sv-SE)<span style="color:green"> -1,23456789E-25</span></td>
</tr>
<tr>
<td style="text-align:left">“N” or “n”</td>
<td style="text-align:left">Number</td>
<td style="text-align:left">支持整数和大整数，<br>将数组转化为带有分隔符的格式</td>
<td style="text-align:left">1234.567 (“N”, en-US)<span style="color:green">1,234.57</span><br>1234.567 (“N”, ru-RU)<span style="color:green"> 1234,57</span><br>1234 (“N1”, en-US)<span style="color:green">1,234.0</span><br>1234 (“N1”, ru-RU)<span style="color:green"> 1234,0</span><br>-1234.56 (“N3”, en-US)<span style="color:green"> -1,234.560</span><br>-1234.56 (“N3”, ru-RU)<span style="color:green"> -1 234,560</span></td>
</tr>
<tr>
<td style="text-align:left">“P” or “p”</td>
<td style="text-align:left">Percent</td>
<td style="text-align:left">支持所有的数字类型，<br>将数字转化为百分比</td>
<td style="text-align:left">1 (“P”, en-US)<span style="color:green"> 100.00 %</span><br>1 (“P”, fr-FR)<span style="color:green"> 100,00 %</span><br>-0.39678 (“P1”, en-US)<span style="color:green"> -39.7 %</span><br>-0.39678 (“P1”, fr-FR)<span style="color:green"> -39,7 %</span></td>
</tr>
<tr>
<td style="text-align:left">“R” or “r”</td>
<td style="text-align:left">Round-trip</td>
<td style="text-align:left">支持单精度，双精度和大整数，<br>将数字转化为字符串<br>并保证从字符串转化为数字时可以还原到原来的值</td>
<td style="text-align:left">123456789.12345678 (“R”)<span style="color:green">123456789.12345678</span><br>-1234567890.12345678(“R”)<span style="color:green"> -1234567890.1234567</span></td>
</tr>
<tr>
<td style="text-align:left">“X” or “x”</td>
<td style="text-align:left">Hexadecimal</td>
<td style="text-align:left">只支持整数，<br>将数字转化为十六进制字符串</td>
<td style="text-align:left">255 (“X”)<span style="color:green"> FF</span><br>-1 (“x”)<span style="color:green"> ff</span><br>255 (“x4”)<span style="color:green"> 00ff</span><br>-1 (“X4”)<span style="color:green">00FF</span></td>
</tr>
</tbody>
</table>
<h4 id="集合"><a href="/2017/03/31/Net-Core之配置详解/#集合" class="headerlink" title="集合"></a>集合</h4><ul>
<li>List<t>是ArrayList的支持泛型版本</t></li>
<li>Dictionary<tkey,tvalue>是Hashtable的支持泛型版本</tkey,tvalue></li>
<li>Collection<t>是CollectionBase的支持泛型版本</t></li>
<li>ReadOnlyCollection<t>是ReadOnlyCollectionBase的支持泛型版本</t></li>
<li>LinkedList<t> 支持泛型的链表</t></li>
<li>SortedDictionary<tkey, tvalue="">支持排序的泛型集合</tkey,></li>
<li>BlockingCollection<t>是提供了实现bounding和blocking等原型的集合</t></li>
<li>ConcurrentBag<t>支持并发的集合</t></li>
</ul>
<p><strong>SortedList</strong>和<strong>SortedList<tkey,tvalue></tkey,tvalue></strong>以及<strong>SortedDictionary<tkey,tvalue></tkey,tvalue></strong>这三中集合和<strong>Hashtable</strong>以及<strong>Dictionary<tkey,tvalue></tkey,tvalue></strong>比较相似，都实现了IDictionary这个接口，但是前三者是有序的，且排序的时间复杂度为O(1)。前两个泛型类还实现了System.Collections.Generic.IDictionary<tkey, tvalue="">接口。</tkey,></p>
<p><strong>Hashtable</strong>和<strong>HashSet</strong>的区别是HashSet是无序的且键值唯一的。</p>
<p>在多线程下，并发处理集合是不安全的，这称之为线程非安全集合，否则为线程安全集合。在.NET中，所有的线程安全集合都在System.Collections.Concurrent命名空间下面。实现线程安全就要是加上锁机制，从而防止在并发下被非法修改共享的集合数据。</p>
<h4 id="LINQ"><a href="/2017/03/31/Net-Core之配置详解/#LINQ" class="headerlink" title="LINQ"></a>LINQ</h4><p>使用LINQ的集合必须实现System.Collections.IEnumerable或者System.Collections.Generic.IEnumrable<t>接口，LINQ的数据将直接存放在内存中，所以操作的速度是极快的。</t></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍了.Net core CLI的相关命令和配置.&lt;/p&gt;
    
    </summary>
    
      <category term="ASP.Net" scheme="/categories/ASP-Net/"/>
    
    
      <category term="ASP.Net" scheme="/tags/ASP-Net/"/>
    
  </entry>
  
  <entry>
    <title>离线安装VS CODE扩展</title>
    <link href="/2017/03/21/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85VS-CODE%E6%89%A9%E5%B1%95/"/>
    <id>/2017/03/21/离线安装VS-CODE扩展/</id>
    <published>2017-03-21T11:49:01.000Z</published>
    <updated>2017-03-31T05:47:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章介绍如何在离线环境下安装各种Visual Code的扩展插件.</p>
<a id="more"></a>
<p>Visual Code是Microsoft发行的一款文本编辑器，功能十分强大，加上其友好的界面风格（和VS差不多），个人十分喜欢，和Notepad++等有的一拼，支持各种语法，也支持Markdown预览。下面介绍如果离线安装扩展插件：</p>
<p><img src="https://code.visualstudio.com/images/install-extension_extensions-view.png" alt="VS Code"></p>
<p>VS Code的离线包的扩展名是<code>.vsix</code>。<a href="https://marketplace.visualstudio.com/" target="_blank" rel="external">点击跳转到官方插件市场</a>。</p>
<p>下载链接：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">https:<span class="comment">//$&#123;publisher&#125;.gallery.vsassets.io/_apis/public/gallery/publisher/</span></div><div class="line">$&#123;publisher&#125;/extension/$&#123;extension&#125;/$&#123;version&#125;/assetbyname/</div><div class="line">Microsoft<span class="selector-class">.VisualStudio</span><span class="selector-class">.Services</span><span class="selector-class">.VSIXPackage</span></div></pre></td></tr></table></figure>
<p>我们需要手动将<code>${publisher}</code>/<code>${extension}</code>/<code>${extension.name}</code>/<code>${version}</code>替换掉：</p>
<p>举个例子：</p>
<p>在浏览官方市场的某个插件扩展下载页面的时候，将浏览器上的链接复制下来：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp</div></pre></td></tr></table></figure>
<p>然后，<code>${publisher}</code>的值就是 ms-vscode, <code>${extension}</code>就是<code>csharp</code>,版本我们可以在主页面直接看到版本号，得到一个新的链接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/</div><div class="line">extension/csharp/1.3.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage</div></pre></td></tr></table></figure></p>
<p>然后就可以直接粘贴到浏览器上下载了。</p>
<p>下载完后，会得到后缀名为<code>.vsixpublisher</code>的文件，F2直接重命名为<code>.vsix</code>,然后直接双击打开安装或者直接拖进VS Code的编辑页面即可完成安装，重启VS code后F1即可选择离线安装的插件。</p>
<p>参考连接：<a href="http://stackoverflow.com/questions/37071388/how-to-install-vscode-extensions-offline" target="_blank" rel="external">http://stackoverflow.com/questions/37071388/how-to-install-vscode-extensions-offline</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章介绍如何在离线环境下安装各种Visual Code的扩展插件.&lt;/p&gt;
    
    </summary>
    
      <category term="Tool" scheme="/categories/Tool/"/>
    
    
      <category term="VS Code" scheme="/tags/VS-Code/"/>
    
  </entry>
  
  <entry>
    <title>Ionic开发环境搭建</title>
    <link href="/2017/03/11/Ionic%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>/2017/03/11/Ionic开发环境搭建/</id>
    <published>2017-03-11T07:37:36.000Z</published>
    <updated>2017-03-30T12:33:42.312Z</updated>
    
    <content type="html"><![CDATA[<p>最近突然冒出一个想开发一个移动社交APP的念头，想要同时包含安卓和IOS版本。但是作为一个WEB开发者，在工作之余去学习原生的IOS和Android开发的学习成本是比较高的，所以想着以H5混合开发的模式来实现。Ionic是一个基于H5的移动开发框架，也算是从头学起吧，现在介绍下在Linux下搭建Ionic开发环境。</p>
<a id="more"></a>
<h4 id="1-如果机器上没有安装npm，则需要先安装npm。"><a href="/2017/03/11/Ionic开发环境搭建/#1-如果机器上没有安装npm，则需要先安装npm。" class="headerlink" title="1. 如果机器上没有安装npm，则需要先安装npm。"></a>1. 如果机器上没有安装npm，则需要先安装npm。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install npm</div></pre></td></tr></table></figure>
<h4 id="2-Ionic是基于NodeJs的，所以需要安装node-js"><a href="/2017/03/11/Ionic开发环境搭建/#2-Ionic是基于NodeJs的，所以需要安装node-js" class="headerlink" title="2. Ionic是基于NodeJs的，所以需要安装node.js"></a>2. Ionic是基于NodeJs的，所以需要安装node.js</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apm install nodejs</div></pre></td></tr></table></figure>
<p>一般安装完成后，使用<code>node -v</code>,来查看是否已经安装成功，如果不成功，一般需要执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apm install nodejs-legacy</div></pre></td></tr></table></figure></p>
<h4 id="3-安装打包工具cordova"><a href="/2017/03/11/Ionic开发环境搭建/#3-安装打包工具cordova" class="headerlink" title="3.安装打包工具cordova"></a>3.安装打包工具cordova</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apm install -g cordova</div></pre></td></tr></table></figure>
<p>这个过程可能会耗费时间比较长。最后安装成功后，会有下面类似的提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">/usr/local/bin/cordova -&gt; /usr/local/lib/node_modules/cordova/bin/cordova</div><div class="line">/usr/local/lib</div><div class="line">└─┬ cordova@6.5.0 </div><div class="line">  ├─┬ cordova-common@2.0.0 </div><div class="line">  │ ├── ansi@0.3.1 </div><div class="line">  │ ├─┬ bplist-parser@0.1.1 </div><div class="line">  │ │ └── big-integer@1.6.17 </div><div class="line">  │ ├── cordova-registry-mapper@1.1.15 </div><div class="line">  │ ├─┬ elementtree@0.1.7 </div><div class="line">  │ │ └── sax@1.1.4 </div><div class="line">  │ ├─┬ glob@5.0.15 </div><div class="line">  │ │ ├─┬ inflight@1.0.6 </div><div class="line">  │ │ │ └── wrappy@1.0.2 </div><div class="line">  │ │ ├── inherits@2.0.3 </div><div class="line">  │ │ ├── once@1.4.0 </div><div class="line">  │ │ └── path-is-absolute@1.0.1 </div><div class="line">  │ ├─┬ minimatch@3.0.3 </div><div class="line">  │ │ └─┬ brace-expansion@1.1.6 </div><div class="line">  │ │   ├── balanced-match@0.4.2 </div><div class="line">  │ │   └── concat-map@0.0.1 </div><div class="line">...</div></pre></td></tr></table></figure></p>
<h4 id="4-安装Ioinc"><a href="/2017/03/11/Ionic开发环境搭建/#4-安装Ioinc" class="headerlink" title="4. 安装Ioinc"></a>4. 安装Ioinc</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo apm install ionic -g</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近突然冒出一个想开发一个移动社交APP的念头，想要同时包含安卓和IOS版本。但是作为一个WEB开发者，在工作之余去学习原生的IOS和Android开发的学习成本是比较高的，所以想着以H5混合开发的模式来实现。Ionic是一个基于H5的移动开发框架，也算是从头学起吧，现在介绍下在Linux下搭建Ionic开发环境。&lt;/p&gt;
    
    </summary>
    
      <category term="Ionic" scheme="/categories/Ionic/"/>
    
    
      <category term="Ionic" scheme="/tags/Ionic/"/>
    
  </entry>
  
  <entry>
    <title>试试Reids之Linux环境安装</title>
    <link href="/2017/03/10/%E8%AF%95%E8%AF%95Reids%E4%B9%8BLinux%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>/2017/03/10/试试Reids之Linux环境安装/</id>
    <published>2017-03-10T05:19:07.000Z</published>
    <updated>2017-03-30T12:38:43.098Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了如何在Linux环境下安装Redis数据库</p>
<a id="more"></a>
<h4 id="Step-1：下载压缩包，指定版本号"><a href="/2017/03/10/试试Reids之Linux环境安装/#Step-1：下载压缩包，指定版本号" class="headerlink" title="Step 1：下载压缩包，指定版本号"></a>Step 1：下载压缩包，指定版本号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://download.redis.io/releases/redis-2.8.17.tar.gz</div><div class="line">$ tar xzf redis-2.8.17.tar.gz</div><div class="line">$ cd redis-2.8.17</div><div class="line">$ make</div></pre></td></tr></table></figure>
<p>make完后 redis-2.8.17目录下会出现编译后的redis服务程序redis-server,还有用于测试的客户端程序redis-cli,两个程序位于安装目录 src 目录下</p>
<h4 id="Step2-修改redis-conf文件，加入密码验证等"><a href="/2017/03/10/试试Reids之Linux环境安装/#Step2-修改redis-conf文件，加入密码验证等" class="headerlink" title="Step2: 修改redis.conf文件，加入密码验证等"></a>Step2: 修改redis.conf文件，加入密码验证等</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd redis-2.8.17</div><div class="line">$ vim redis.conf</div></pre></td></tr></table></figure>
<p>vim中主要是添加<code>requirepass</code>信息，启用密码</p>
<h4 id="Step-3-将redis-conf移动到src目录下"><a href="/2017/03/10/试试Reids之Linux环境安装/#Step-3-将redis-conf移动到src目录下" class="headerlink" title="Step 3 : 将redis.conf移动到src目录下"></a>Step 3 : 将redis.conf移动到src目录下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo mv redis.conf src</div></pre></td></tr></table></figure>
<h4 id="Step-4-启动Redis"><a href="/2017/03/10/试试Reids之Linux环境安装/#Step-4-启动Redis" class="headerlink" title="Step 4 : 启动Redis"></a>Step 4 : 启动Redis</h4><p>控制台启动Redis服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd src </div><div class="line">$ ./redis-server redis.conf</div></pre></td></tr></table></figure></p>
<p>控制台启动Redis服务，后台运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd src</div><div class="line">$ nohup ./redis-server redis.conf &amp;</div></pre></td></tr></table></figure></p>
<h4 id="Step-5-测试连接"><a href="/2017/03/10/试试Reids之Linux环境安装/#Step-5-测试连接" class="headerlink" title="Step 5: 测试连接"></a>Step 5: 测试连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ./redis-cli</div><div class="line">$ auth password</div><div class="line">$ ping</div></pre></td></tr></table></figure>
<p>至此，Redis安装完毕</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍了如何在Linux环境下安装Redis数据库&lt;/p&gt;
    
    </summary>
    
      <category term="Database" scheme="/categories/Database/"/>
    
    
      <category term="Database" scheme="/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL之Linux下环境安装</title>
    <link href="/2017/03/10/PostgreSQL%E4%B9%8BLinux%E4%B8%8B%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>/2017/03/10/PostgreSQL之Linux下环境安装/</id>
    <published>2017-03-10T03:46:22.000Z</published>
    <updated>2017-03-30T12:43:30.782Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了在Linux下安装PostgreSQL数据库、用户配置、PSQL连接等基本环境的搭建过程。</p>
<a id="more"></a>
<h4 id="Step-1-安装PGSQL客户端"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-1-安装PGSQL客户端" class="headerlink" title="Step 1: 安装PGSQL客户端"></a>Step 1: 安装PGSQL客户端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install postgresql-client</div></pre></td></tr></table></figure>
<h4 id="Step-2-安装PGSQL服务端"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-2-安装PGSQL服务端" class="headerlink" title="Step 2: 安装PGSQL服务端"></a>Step 2: 安装PGSQL服务端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install postgresql</div></pre></td></tr></table></figure>
<p>注意：安装完成后，PostgreSQL会默认添加一个Linux连接用户postgres，此时通过postgres连接数据库不需要任何密码验证。</p>
<h4 id="Step-3：切换到postgres用户，用于设置密码等初始化操作"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-3：切换到postgres用户，用于设置密码等初始化操作" class="headerlink" title="Step 3：切换到postgres用户，用于设置密码等初始化操作"></a>Step 3：切换到postgres用户，用于设置密码等初始化操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo su - postgres</div><div class="line">psql</div></pre></td></tr></table></figure>
<p>如果成功，控制台将提示下面提示符，即可进行PGSQL的所有操作了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">postgres=#</div></pre></td></tr></table></figure></p>
<h4 id="Step-4-设置密码"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-4-设置密码" class="headerlink" title="Step 4: 设置密码"></a>Step 4: 设置密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$postgres=# \password your_password_for_user_postgres</div></pre></td></tr></table></figure>
<p>设置完成后postgres用户将启用该密码才能登陆</p>
<h4 id="Step-5-创建数据库"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-5-创建数据库" class="headerlink" title="Step 5: 创建数据库"></a>Step 5: 创建数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Create database xxx;</div></pre></td></tr></table></figure>
<h4 id="Step-6-创建其他登陆用户并授权"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-6-创建其他登陆用户并授权" class="headerlink" title="Step 6: 创建其他登陆用户并授权"></a>Step 6: 创建其他登陆用户并授权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Create User username with password &apos;your_password&apos;;</div><div class="line">Create Database dbname owner username;</div><div class="line">Grant all privileges on DataBase dbname to username;</div></pre></td></tr></table></figure>
<h4 id="Step-7-退出Postgres"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-7-退出Postgres" class="headerlink" title="Step 7: 退出Postgres"></a>Step 7: 退出Postgres</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\q</div></pre></td></tr></table></figure>
<h4 id="Step-8-测试连接"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-8-测试连接" class="headerlink" title="Step 8: 测试连接"></a>Step 8: 测试连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo psql -U username -d dbname -h host p port</div></pre></td></tr></table></figure>
<h4 id="Step-9-执行sql脚本"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-9-执行sql脚本" class="headerlink" title="Step 9: 执行sql脚本"></a>Step 9: 执行sql脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pgsql dbname &lt; dbscript.sql</div></pre></td></tr></table></figure>
<h4 id="Step-10-PSQL控制台命令"><a href="/2017/03/10/PostgreSQL之Linux下环境安装/#Step-10-PSQL控制台命令" class="headerlink" title="Step 10: PSQL控制台命令"></a>Step 10: PSQL控制台命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">\h  #查看SQL命令的解释，相当于MonogDB中的explain，查看执行计划</div><div class="line">\?  #查看PSQL命令列表</div><div class="line">\l  #列出所有数据库</div><div class="line">\c  #连接其他数据库，参数为[database_name]</div><div class="line">\d  #列出当前数据库的所有表</div><div class="line">\d  #列出当前数据库的指定表，参数为[table_name]</div><div class="line">\du #列出所有用户</div><div class="line">\e  #打开文本编辑器</div><div class="line">\conninfo #列出当前数据库连接信息</div></pre></td></tr></table></figure>
<p>至此为止，Postgres配置完成。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍了在Linux下安装PostgreSQL数据库、用户配置、PSQL连接等基本环境的搭建过程。&lt;/p&gt;
    
    </summary>
    
      <category term="Database" scheme="/categories/Database/"/>
    
    
      <category term="Database" scheme="/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>[转]Real Developers Ship</title>
    <link href="/2017/02/25/%E8%BD%AC-Real-Developers-Ship/"/>
    <id>/2017/02/25/转-Real-Developers-Ship/</id>
    <published>2017-02-25T08:49:38.000Z</published>
    <updated>2017-03-31T01:31:29.543Z</updated>
    
    <content type="html"><![CDATA[<p>If you are a developer and you are not shipping, you’re in the danger zone. I believe it’s mostly your fault, and it’s time to act.</p>
<a id="more"></a>
<h3 id="Nothing-new"><a href="/2017/02/25/转-Real-Developers-Ship/#Nothing-new" class="headerlink" title="Nothing new"></a>Nothing new</h3><p>It’s been told before. Famous blogs have said the same thing :</p>
<ul>
<li>In Hacker News <a href="https://news.ycombinator.com/item?id=290121" target="_blank" rel="external">Real Programmers ship</a> without any explanation, as if it meant it all.</li>
<li>In Coding Horror <a href="http://blog.codinghorror.com/version-1-sucks-but-ship-it-anyway/" target="_blank" rel="external">Version 1 Sucks, But Ship It Anyway</a> Jeff Atwood stresses the benefits of shipping early.</li>
<li>In Coding Horror again <a href="http://blog.codinghorror.com/shipping-isnt-enough/" target="_blank" rel="external">Shipping Is Not Enough</a> Jeff Atwood goes one step further and explains that we need to create software that is going to be used.</li>
<li>In his <a href="http://removingalldoubt.com/post/2006/09/19/Fatherly-Advice-To-New-Programmers.aspx" target="_blank" rel="external">fatherly advice to new programmers</a> Chuck Jazdzewski’s says “You don’t get paid to program, you get paid to ship.”</li>
</ul>
<h3 id="What-does-it-really-mean"><a href="/2017/02/25/转-Real-Developers-Ship/#What-does-it-really-mean" class="headerlink" title="What does it really mean ?"></a>What does it really mean ?</h3><p>If you are not shipping, are you really developing something ? Maybe it’s more some kind of research project, or maybe you are just there for learning ? Real Developers know what they are in for.</p>
<p>If you are not shipping because the quality is too bad, that’s because you’ve been developing poor quality software … Real developers write quality software. (BTW, shipping bug fixes is not shipping)</p>
<p>If you are not shipping because you don’t have yet enough features, that’s because your MVP is not small enough (despite the current Skateboard metaphor, this is not an MVP). So Real developers follow lean (startup) principles.</p>
<p>If you are not shipping because it’s much work, that’s because you did not automate delivery. Real developers use continuous delivery.</p>
<p>If you are not shipping because someone else said so, maybe it’s time to convince her. Real developers know how to deal with people.</p>
<p>If you are not shipping because you are in a shitty environment … Real developers work on their skills to be able to quit when needed.</p>
<h3 id="Shipping-above-all-else"><a href="/2017/02/25/转-Real-Developers-Ship/#Shipping-above-all-else" class="headerlink" title="Shipping above all else"></a>Shipping above all else</h3><p>My point is that every developer or organization containing developers should put shipping value as their absolute priority, and things should get a lot simpler.</p>
<h6 id="This-post-is-from-http-philippe-bourgau-net-real-developers-ship"><a href="/2017/02/25/转-Real-Developers-Ship/#This-post-is-from-http-philippe-bourgau-net-real-developers-ship" class="headerlink" title="This post is from http://philippe.bourgau.net/real-developers-ship/"></a>This post is from <a href="http://philippe.bourgau.net/real-developers-ship/" target="_blank" rel="external">http://philippe.bourgau.net/real-developers-ship/</a></h6>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you are a developer and you are not shipping, you’re in the danger zone. I believe it’s mostly your fault, and it’s time to act.&lt;/p&gt;
    
    </summary>
    
      <category term="Software Engineering" scheme="/categories/Software-Engineering/"/>
    
    
      <category term="Software Engineering" scheme="/tags/Software-Engineering/"/>
    
  </entry>
  
  <entry>
    <title>试试Redis之启动服务1067错误</title>
    <link href="/2017/02/15/%E8%AF%95%E8%AF%95Redis%E4%B9%8B%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A11067%E9%94%99%E8%AF%AF/"/>
    <id>/2017/02/15/试试Redis之启动服务1067错误/</id>
    <published>2017-02-15T04:00:34.000Z</published>
    <updated>2017-03-31T01:32:33.960Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要讲述了在启动Redis服务时遇到的启动失败的问题(错误码：1067)及其解决方式。<br><a id="more"></a></p>
<h5 id="可能原因1：日志文件所在目录不存在"><a href="/2017/02/15/试试Redis之启动服务1067错误/#可能原因1：日志文件所在目录不存在" class="headerlink" title="可能原因1：日志文件所在目录不存在"></a>可能原因1：日志文件所在目录不存在</h5><p>在<code>redis.windows-service.conf</code>中，存在配置日志文件路径的配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Specify the log file name. Also &apos;stdout&apos; can be used to force</div><div class="line"># Redis to log on the standard output.</div><div class="line">logfile &quot;server_log.txt&quot;</div></pre></td></tr></table></figure>
<p>如果指定的目录不存在，会导致服务启动失败</p>
<h5 id="可能原因2：创建服务时，指定的配置文件错误"><a href="/2017/02/15/试试Redis之启动服务1067错误/#可能原因2：创建服务时，指定的配置文件错误" class="headerlink" title="可能原因2：创建服务时，指定的配置文件错误"></a>可能原因2：创建服务时，指定的配置文件错误</h5><p>如果是按照下面这个命令创建服务，可能导致服务启动失败：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">D:\SDK\Redis&gt;redis-server --service-install redis.windows.conf --logleve</div><div class="line">l verbose --service-name Anderson-redis</div></pre></td></tr></table></figure>
<p>原因是<code>redis.windows.conf</code>和<code>redis.windows-service.conf</code>是有区别的，当用于创建服务时，需要指定为后者。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">D:\SDK\Redis&gt;redis-server --service-install redis.windows-service.conf --logleve</div><div class="line">l verbose --service-name Anderson-redis</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要讲述了在启动Redis服务时遇到的启动失败的问题(错误码：1067)及其解决方式。&lt;br&gt;
    
    </summary>
    
      <category term="Database" scheme="/categories/Database/"/>
    
    
      <category term="Database" scheme="/tags/Database/"/>
    
      <category term="Redis" scheme="/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>试试Reids之安装服务1073错误</title>
    <link href="/2017/02/15/%E8%AF%95%E8%AF%95Reids%E4%B9%8B%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A11073%E9%94%99%E8%AF%AF/"/>
    <id>/2017/02/15/试试Reids之安装服务1073错误/</id>
    <published>2017-02-15T03:25:36.000Z</published>
    <updated>2017-03-31T01:33:03.408Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了在Windows上安装Redis服务出现的一个1073的错误及其解决方法。<br><a id="more"></a></p>
<h5 id="第一次尝试安装Redis服务"><a href="/2017/02/15/试试Reids之安装服务1073错误/#第一次尝试安装Redis服务" class="headerlink" title="第一次尝试安装Redis服务"></a>第一次尝试安装Redis服务</h5><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Microsoft Windows [版本 6.1.7601]</div><div class="line">版权所有 (c) 2009 Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">D:\SDK\Redis&gt;redis-server.exe --service-install redis.windows.conf --loglevel ve</div><div class="line">rbos</div><div class="line">[6384] 15 Feb 11:23:21.557 # HandleServiceCommands: system error caught. error c</div><div class="line">ode=1073, message = CreateService failed: unknown error</div></pre></td></tr></table></figure>
<h5 id="指定服务名"><a href="/2017/02/15/试试Reids之安装服务1073错误/#指定服务名" class="headerlink" title="指定服务名"></a>指定服务名</h5><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">D:\SDK\Redis&gt;redis-server --service-install redis.windows.conf --loglevel verbos</div><div class="line">e --service-name redisService</div><div class="line">[7220] 15 Feb 11:35:34.863 # Granting read/write access to 'NT AUTHORITY\Network</div><div class="line">Service' on: "D:\SDK\Redis" "D:\SDK\Redis\"</div><div class="line">[7220] 15 Feb 11:35:34.864 # Redis successfully installed as a service.</div></pre></td></tr></table></figure>
<p><strong>创建成功，综上所述，需要指定服务名称才能创建成功</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍了在Windows上安装Redis服务出现的一个1073的错误及其解决方法。&lt;br&gt;
    
    </summary>
    
      <category term="Database" scheme="/categories/Database/"/>
    
    
      <category term="Database" scheme="/tags/Database/"/>
    
      <category term="Redis" scheme="/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>.NET Core之基本配置</title>
    <link href="/2017/02/09/NET-Core%E4%B9%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <id>/2017/02/09/NET-Core之基本配置/</id>
    <published>2017-02-09T12:10:53.000Z</published>
    <updated>2017-03-31T07:02:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了.NET Core应用的启动方式及其相关配置。</p>
<a id="more"></a>
<h3 id="启动类：-Startup-cs"><a href="/2017/02/09/NET-Core之基本配置/#启动类：-Startup-cs" class="headerlink" title="启动类： Startup.cs"></a>启动类： Startup.cs</h3><p>ASP.NET Core应用要求具有一个启动类，这个启动类即<strong>Startup.cs</strong>（有没有感觉和<strong>SpringBoot</strong>一样的感觉？），用来处理HTTP请求的入口以及一些主要的服务器启动配置。</p>
<h3 id="配置服务器端口号"><a href="/2017/02/09/NET-Core之基本配置/#配置服务器端口号" class="headerlink" title="配置服务器端口号"></a>配置服务器端口号</h3><figure class="highlight cs"><figcaption><span>Program.cs .NET CORE</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> host = <span class="keyword">new</span> WebHostBuilder().UseUrls(<span class="string">"http://demo.com"</span>).Build();</div><div class="line">    host.Run();</div></pre></td></tr></table></figure>
<h3 id="配置MVC默认路由"><a href="/2017/02/09/NET-Core之基本配置/#配置MVC默认路由" class="headerlink" title="配置MVC默认路由"></a>配置MVC默认路由</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> IApplicationBuilder <span class="title">AppendRouteMappingConfiguration</span>(<span class="params">IApplicationBuilder app</span>)</span></div><div class="line">        &#123;</div><div class="line">            app.UseMvc(route =&gt; route.MapRoute(</div><div class="line">                name: <span class="string">"defalut"</span>,</div><div class="line">                template: <span class="string">"&#123;controller=Home&#125;/&#123;action=index&#125;/&#123;id?&#125;"</span></div><div class="line">                ));</div><div class="line">            <span class="keyword">return</span> app;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>可以通过<code>IApplicationBuilder</code>配置默认路由，该对象是以下方法的一个参数，通过这个参数对默认路由进行设置。<br><figure class="highlight cs"><figcaption><span>Startup.cs .NET CORE</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params"></span></span></div><div class="line">    IApplicationBuilder app, </div><div class="line">    IHostingEnvironment env, </div><div class="line">    ILoggerFactory loggerFactory)&#123;&#125;</div></pre></td></tr></table></figure></p>
<h4 id="MVC路由匹配规则"><a href="/2017/02/09/NET-Core之基本配置/#MVC路由匹配规则" class="headerlink" title="MVC路由匹配规则"></a>MVC路由匹配规则</h4><p>.NET Core中的路由匹配规则是:<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;controller&#125;/&#123;action&#125;/&#123;<span class="keyword">params</span>&#125;</div></pre></td></tr></table></figure></p>
<p>即控制器名称/方法名称/参数列表。比如访问<code>http://www.hummingman.cc/A/B</code>,则将映射到下面这个方法中：</p>
<figure class="highlight cs"><figcaption><span>AController.cs .NET CORE</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AController</span> : <span class="title">IController</span>&#123;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;</div><div class="line">       <span class="keyword">return</span> <span class="string">"hello world"</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">Index</span>(<span class="params"></span>)</span>&#123;</div><div class="line">       <span class="keyword">return</span> <span class="string">"index"</span>;</div><div class="line">    &#125;    </div><div class="line">   </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">S</span>(<span class="params"><span class="keyword">int</span> i,<span class="keyword">int</span> j</span>)</span>&#123;</div><div class="line">       <span class="keyword">return</span> (i+j).ToString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果只访问到控制器<code>http://www.hummingman.cc/A</code>，则会默认匹配到控制类中的<code>Index()</code>方法。<br>如果访问到参数列表<code>http://www.hummingman.cc/A/S?i=1&amp;j=2</code>, 则会匹配到<code>S(int i,int j)</code>方法。</p>
<h3 id="返回页面"><a href="/2017/02/09/NET-Core之基本配置/#返回页面" class="headerlink" title="返回页面"></a>返回页面</h3><p>在控制器中返回<code>ActionResult</code>对象的数据，则可返回相应的页面<br><figure class="highlight kotlin"><figcaption><span>AController.cs .NET Core</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AController</span> : <span class="type">IController&#123;</span></span></div><div class="line">    <span class="keyword">public</span> ActionResult BDemo()&#123;</div><div class="line">        <span class="keyword">return</span> View();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>.NET Core会到<strong>view</strong>文件夹下找到控制器所对应的文件夹，这里是<strong>/view/A/</strong>,接下来会在该文件夹下寻找与方法同名的页面文件，这里是<strong>/view/A/BDemo.cshtml</strong><br><strong>通过ViewData传递数据</strong><br>如果需要向前端页面传递数据，则可通过<code>ViewData</code>进行传递：<br><figure class="highlight cs"><figcaption><span>AController.cs .NET Core</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AController</span> : <span class="title">IController</span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> ActionResult <span class="title">CDemo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        ViewData[<span class="string">"a"</span>] = <span class="number">1</span>;</div><div class="line">        ViewData[<span class="string">"b"</span>] = <span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>前端页面引用方式：<br><figure class="highlight autoit"><figcaption><span>CDemo.cshtml .NET Core</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;li&gt;<span class="symbol">@ViewData[</span><span class="string">"a"</span>], <span class="symbol">@ViewData[</span><span class="string">"b"</span>]&lt;/li&gt;</div></pre></td></tr></table></figure></p>
<h3 id="模型类"><a href="/2017/02/09/NET-Core之基本配置/#模型类" class="headerlink" title="模型类"></a>模型类</h3><p>在<strong>SSH</strong>/<strong>SSM</strong>/<strong>SpringBoot</strong>等MVC框架中都有连类查询的思想，即模型层用来处理数据库实体与业务层的上下关系。所以模型类是数据库表的一个实体(关系型数据库表实体类)，也称为数据访问对象(Access Database Object)。所以实体类看起来如下：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Sex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>同时需要创建数据库交互的实体类，称为数据上下文处理类（<strong>Context Class</strong>）,其负责所有的数据增删改查操作，同时为控制器提供业务处理结果。在.NET Core中也有<strong>依赖注入</strong>的概念，通过注入，框架为你实例化该类对象。控制器中通过构造器依赖注入数据处理类对象如下：<br><figure class="highlight cs"><figcaption><span>AController.cs</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AController</span> : <span class="title">IController</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ApplicationDbContext _context;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AController</span>(<span class="params">ApplicationDbContext context</span>)</span></div><div class="line">    &#123;</div><div class="line">        _context = context;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Index</span>(<span class="params"></span>)</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> View(<span class="keyword">await</span> _context.Movie.ToListAsync());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="配置依赖注入"><a href="/2017/02/09/NET-Core之基本配置/#配置依赖注入" class="headerlink" title="配置依赖注入"></a>配置依赖注入</h3><p>.NET Core在控制器类中注入数据处理对象时需要先在<code>Startup.cs</code>中配置相关的注入服务。<br><figure class="highlight mipsasm"><figcaption><span>Startup.cs</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public void ConfigureServices(IServiceCollection services)</div><div class="line">&#123;            </div><div class="line">     services.<span class="keyword">AddApplicationInsightsTelemetry(Configuration);</span></div><div class="line">     services.<span class="keyword">AddMvc();</span></div><div class="line">     services.<span class="keyword">AddTransient&lt;IUserContext, </span>UserContext&gt;()<span class="comment">;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><br>在控制器中通过构造器注入依赖：<br><figure class="highlight cs"><figcaption><span>ACtroller.cs</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AController</span> : <span class="title">Controller</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IUserContext _context;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AController</span>(<span class="params">IUserContext context</span>)</span></div><div class="line">    &#123;</div><div class="line">        _context = context;</div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍了.NET Core应用的启动方式及其相关配置。&lt;/p&gt;
    
    </summary>
    
      <category term="ASP.Net" scheme="/categories/ASP-Net/"/>
    
    
      <category term="ASP.Net" scheme="/tags/ASP-Net/"/>
    
  </entry>
  
  <entry>
    <title>Google搜索被劫持的解决办法</title>
    <link href="/2017/02/08/Google%E6%90%9C%E7%B4%A2%E8%A2%AB%E5%8A%AB%E6%8C%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>/2017/02/08/Google搜索被劫持的解决办法/</id>
    <published>2017-02-08T12:41:13.000Z</published>
    <updated>2017-03-31T01:35:14.791Z</updated>
    
    <content type="html"><![CDATA[<p>今天下午在使用Google的时候，发现通过Google搜索引擎搜索会被莫名其妙的导航到一个俄国网站。其基本原理在于将劫持数据隐藏在了Google浏览器的扩展程序目录中，通过清理，即可解决这个问题。</p>
<a id="more"></a>
<p>先来看看，被劫持后的搜索页面：</p>
<p><img src="http://p1.bpimg.com/577934/7f8223e51a9108fd.png" alt="被劫持后的GOOGLE搜索"></p>
<p><strong>解决方法：</strong></p>
<p>将Google安装目录下的插件扩展目录下的某些数据清除：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rm <span class="_">-f</span> C:\Users\yourhostname\AppData\Local\Google\Chrome\User Data\</div><div class="line">Default\Extensions\your_custom_filter</div></pre></td></tr></table></figure>
<p>当然，需要考虑到别把正常的扩展程序给干掉了，只需要删除最近修改过的文件夹就好了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天下午在使用Google的时候，发现通过Google搜索引擎搜索会被莫名其妙的导航到一个俄国网站。其基本原理在于将劫持数据隐藏在了Google浏览器的扩展程序目录中，通过清理，即可解决这个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="杂项" scheme="/categories/%E6%9D%82%E9%A1%B9/"/>
    
      <category term="安全" scheme="/categories/%E6%9D%82%E9%A1%B9/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Security" scheme="/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>Gradle构建之compileJava failed</title>
    <link href="/2017/02/06/Gradle%E6%9E%84%E5%BB%BA%E4%B9%8BcompileJava-failed/"/>
    <id>/2017/02/06/Gradle构建之compileJava-failed/</id>
    <published>2017-02-06T12:21:46.000Z</published>
    <updated>2017-03-31T01:35:59.519Z</updated>
    
    <content type="html"><![CDATA[<p>这个问题在使用Gradle构建开发依赖环境时碰到的，也算是一个比较基本常见的问题。在执行到compileJava这个任务时失败了，提示不是有效的JDK版本，或者提示找不到tools.jar。于是尝试到JRE的安装目录下查找是否具有tools.jar，找了一下，发现没有，再到JDK的安装目录下查看，发现也没有。这TM就坑爹了。根据提示：</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Can not find C:\Program Files\Java\jre1.8.0_101\bin\tools.jar</div></pre></td></tr></table></figure>
<p>这里我既没有指定JDK的安装路径，也没有指定JRE的存储目录，为什么会直接在这里寻找呢？原因可能是没有设置过环境变量。于是，查找环境变量，发现我的JDK是直接设置在Path目录下的，咋看没什么问题。于是Google了下，得到类似的案例。以下是解决方案：</p>
<h6 id="需要JAVA-HOME环境变量，Gradle会通过JAVA-HOME去寻找JDK的路径，否则会在默认路径下寻找。"><a href="/2017/02/06/Gradle构建之compileJava-failed/#需要JAVA-HOME环境变量，Gradle会通过JAVA-HOME去寻找JDK的路径，否则会在默认路径下寻找。" class="headerlink" title="需要JAVA_HOME环境变量，Gradle会通过JAVA_HOME去寻找JDK的路径，否则会在默认路径下寻找。"></a>需要JAVA_HOME环境变量，Gradle会通过JAVA_HOME去寻找JDK的路径，否则会在默认路径下寻找。</h6><h6 id="设置完成后，成功解决："><a href="/2017/02/06/Gradle构建之compileJava-failed/#设置完成后，成功解决：" class="headerlink" title="设置完成后，成功解决："></a>设置完成后，成功解决：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">Microsoft Windows [版本 6.1.7601]</div><div class="line">版权所有 (c) 2009 Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">E:\Eclipse\HummingBird&gt;gradle build</div><div class="line">Starting a Gradle Daemon, 1 incompatible Daemon could not be reused, use --statu</div><div class="line">s <span class="keyword">for</span> details</div><div class="line">:compileJava</div><div class="line">:processResources UP-TO-DATE</div><div class="line">:classes</div><div class="line">:jar</div><div class="line">:assemble</div><div class="line">:compileTestJava UP-TO-DATE</div><div class="line">:processTestResources UP-TO-DATE</div><div class="line">:<span class="built_in">test</span>Classes UP-TO-DATE</div><div class="line">:<span class="built_in">test</span> UP-TO-DATE</div><div class="line">:check UP-TO-DATE</div><div class="line">:build</div><div class="line"></div><div class="line">BUILD SUCCESSFUL</div><div class="line"></div><div class="line">Total time: 4.729 secs</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个问题在使用Gradle构建开发依赖环境时碰到的，也算是一个比较基本常见的问题。在执行到compileJava这个任务时失败了，提示不是有效的JDK版本，或者提示找不到tools.jar。于是尝试到JRE的安装目录下查找是否具有tools.jar，找了一下，发现没有，再到JDK的安装目录下查看，发现也没有。这TM就坑爹了。根据提示：&lt;/p&gt;
    
    </summary>
    
      <category term="Gradle" scheme="/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>提升网站性能的方法总结</title>
    <link href="/2017/01/18/%E6%8F%90%E5%8D%87%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>/2017/01/18/提升网站性能的方法总结/</id>
    <published>2017-01-18T03:24:04.000Z</published>
    <updated>2017-03-31T01:36:39.776Z</updated>
    
    <content type="html"><![CDATA[<p>《高性能网站建设》这本书中提到一个网站建设的黄金法则：”只有10%~20%的响应时间花在了下载HTML文档上，其余的80%~90%时间花在了下载页面的所有组件上”。所以，网站性能优化的中点在于如何削减这80%~90%的时间。</p>
<a id="more"></a>
<h4 id="优化1：（后端）启用GZIP压缩"><a href="/2017/01/18/提升网站性能的方法总结/#优化1：（后端）启用GZIP压缩" class="headerlink" title="优化1：（后端）启用GZIP压缩"></a>优化1：（后端）启用GZIP压缩</h4><p>GZIP压缩可以比较大程度上减少网络的流量传输。其原理算是比较简单和直接，就是对返回的内容进行压缩。在HTTP中，只需要在Response中的Header里加入<code>Content-Type=Gzip</code>即可。一般对于页面、css、js等文件起到压缩作用，从而减少浏览器的下载时间，加速网站性能和提升用户体验。</p>
<h4 id="优化2：（后端）启用ETag"><a href="/2017/01/18/提升网站性能的方法总结/#优化2：（后端）启用ETag" class="headerlink" title="优化2：（后端）启用ETag"></a>优化2：（后端）启用ETag</h4><p>ETag是用来验证缓存的有效性的。ETag有自己特定的格式，这里不详细介绍。通过ETag，可以验证每次请求的资源是否发生过变化，如果没有变化，则服务端返回304，从而避免重复下载相同的资源。但是，对于分布式的后端集群，比如通过反向代理实现的大规模集群中，如果使用ETag则会打打损耗性能。因为需要对比多台服务器上的ETag值。一般情况下，默认携带ETag信息，可以禁用。</p>
<h4 id="优化3：（架构）减少HTTP请求"><a href="/2017/01/18/提升网站性能的方法总结/#优化3：（架构）减少HTTP请求" class="headerlink" title="优化3：（架构）减少HTTP请求"></a>优化3：（架构）减少HTTP请求</h4><p>每一个HTTP请求在服务器中一般都表现为一个线程，在并发环境下，大量线程会驻留在服务器的请求队列中，同时，不同的服务器也会创建不同数量的最大线程去维护和处理并发的请求。而没创建一个线程，都需要耗费资源和时间去维护。所以应当减少一个页面对应的HTTP请求数量。一般可以使用预加载或者延迟加载来减少同一时刻下（宏观上）的并发请求，减少请求队列的长度，从而缩短请求的响应时间。</p>
<h4 id="优化4：（架构）使用CDN加速"><a href="/2017/01/18/提升网站性能的方法总结/#优化4：（架构）使用CDN加速" class="headerlink" title="优化4：（架构）使用CDN加速"></a>优化4：（架构）使用CDN加速</h4><p>CDN加速主要是因为减少了DNS的寻找时间和网络之间通讯的跳数，从而减少连接到服务器和从服务器返回到客户端的时间。</p>
<h4 id="优化5：（前端）启用Expires"><a href="/2017/01/18/提升网站性能的方法总结/#优化5：（前端）启用Expires" class="headerlink" title="优化5：（前端）启用Expires"></a>优化5：（前端）启用Expires</h4><p>原理比较简单，通过设置Headers中的Expires属性的值，来表明该内容是否具有缓存，是否具有有效缓存。但是缓存也不能滥用，一般对高访问低修改的数据使用缓存。</p>
<h4 id="优化6：（前端）将CSS引用放在页面顶部"><a href="/2017/01/18/提升网站性能的方法总结/#优化6：（前端）将CSS引用放在页面顶部" class="headerlink" title="优化6：（前端）将CSS引用放在页面顶部"></a>优化6：（前端）将CSS引用放在页面顶部</h4><p>原理很简单，HTML的渲染是从头到尾的渲染模式，将CSS放在顶部，可以在加载页面内容的同时渲染其样式，否则，在浏览器渲染过程中，加载完页面到渲染样式完毕的时间间隔内可能会出现白屏的现象。</p>
<h4 id="优化7：（前端）将js引用放在底部"><a href="/2017/01/18/提升网站性能的方法总结/#优化7：（前端）将js引用放在底部" class="headerlink" title="优化7：（前端）将js引用放在底部"></a>优化7：（前端）将js引用放在底部</h4><p>这个和上面的一个是一致的，本质上是由于浏览器页面渲染是从上往下进行渲染的。对于JS，一般来说执行时会引起线程阻塞，如果放在顶部，页面还没加载，就在执行对应的JS代码，会导致页面卡顿的现象。</p>
<h4 id="优化8：（前端）避免使用CSS表达式"><a href="/2017/01/18/提升网站性能的方法总结/#优化8：（前端）避免使用CSS表达式" class="headerlink" title="优化8：（前端）避免使用CSS表达式"></a>优化8：（前端）避免使用CSS表达式</h4><p>CSS表达式会进行频繁的求值，导致了性能低下。</p>
<h4 id="优化9：（前端）引用外部CSS和JS文件"><a href="/2017/01/18/提升网站性能的方法总结/#优化9：（前端）引用外部CSS和JS文件" class="headerlink" title="优化9：（前端）引用外部CSS和JS文件"></a>优化9：（前端）引用外部CSS和JS文件</h4><p>是否引用外部CSS和JS文件的区别在于，引用了外部文件后可能会被浏览器缓存，从而加快速度。</p>
<h4 id="优化10：（网络）减少DNS查找"><a href="/2017/01/18/提升网站性能的方法总结/#优化10：（网络）减少DNS查找" class="headerlink" title="优化10：（网络）减少DNS查找"></a>优化10：（网络）减少DNS查找</h4><p>善用DNS缓存，减少DNS查找时间。</p>
<h4 id="优化11：（前端）精简Javascript代码"><a href="/2017/01/18/提升网站性能的方法总结/#优化11：（前端）精简Javascript代码" class="headerlink" title="优化11：（前端）精简Javascript代码"></a>优化11：（前端）精简Javascript代码</h4><p>一般表现为移除不必要的空格，压缩文件的大小，比如常见的jquery.min.js。</p>
<h4 id="优化12：（前端）删除重复的引用"><a href="/2017/01/18/提升网站性能的方法总结/#优化12：（前端）删除重复的引用" class="headerlink" title="优化12：（前端）删除重复的引用"></a>优化12：（前端）删除重复的引用</h4><p>重复引用相同的JS文件，会导致浏览器额外下载重复的内容，延长加载的时间。同时可能应为相同的JS中存在相互冲突。</p>
<h4 id="优化13：（前端）避免重定向"><a href="/2017/01/18/提升网站性能的方法总结/#优化13：（前端）避免重定向" class="headerlink" title="优化13：（前端）避免重定向"></a>优化13：（前端）避免重定向</h4><p>重定向的耗时是因为，一次重定向需要向服务端发送两次请求，第一次将原始URL发送给服务端，服务端解析后返回重定向指令（HTTP 302），客户端接收到该指令后，重新向服务端发送需要重定向的地址，最后服务端返回重定向后的页面。所以重定向耗费的资源和时间是比较大的。</p>
<h4 id="优化14：（前端）缓存AJAX请求"><a href="/2017/01/18/提升网站性能的方法总结/#优化14：（前端）缓存AJAX请求" class="headerlink" title="优化14：（前端）缓存AJAX请求"></a>优化14：（前端）缓存AJAX请求</h4><p>本质上属于缓存的内容。即设置Expires信息。</p>
<h4 id="优化15：（前端）延迟加载"><a href="/2017/01/18/提升网站性能的方法总结/#优化15：（前端）延迟加载" class="headerlink" title="优化15：（前端）延迟加载"></a>优化15：（前端）延迟加载</h4><p>对于图片等，可以等页面渲染完后再慢慢渲染，没有必要一次性将庞大的图片资源渲染到页面中。</p>
<h4 id="优化16：（前端）预加载"><a href="/2017/01/18/提升网站性能的方法总结/#优化16：（前端）预加载" class="headerlink" title="优化16：（前端）预加载"></a>优化16：（前端）预加载</h4><p>和延迟加载相反，在页面使用前预先加载好，使其看起来响应速度更快，页面更流畅。</p>
<h4 id="优化17：（前端）减少DOM数量"><a href="/2017/01/18/提升网站性能的方法总结/#优化17：（前端）减少DOM数量" class="headerlink" title="优化17：（前端）减少DOM数量"></a>优化17：（前端）减少DOM数量</h4><p>主要HTML优化结构，加快渲染速度。</p>
<h4 id="优化18：（前端）不在HTML页面中进行图片缩放"><a href="/2017/01/18/提升网站性能的方法总结/#优化18：（前端）不在HTML页面中进行图片缩放" class="headerlink" title="优化18：（前端）不在HTML页面中进行图片缩放"></a>优化18：（前端）不在HTML页面中进行图片缩放</h4><p>不建议在html中设置长宽而使用比实际需要大的图片。比如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">src</span>=<span class="string">"demo.jpg"</span>/&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="优化19：（前端）favicon要小且可缓存"><a href="/2017/01/18/提升网站性能的方法总结/#优化19：（前端）favicon要小且可缓存" class="headerlink" title="优化19：（前端）favicon要小且可缓存"></a>优化19：（前端）favicon要小且可缓存</h4><p>favicon.ico是web项目中根目录下的一个必要存在的网站图标文件。浏览器每次都会请求这一个favicon图标。并且每次都会携带相应的cookie信息。所以最好是将其缓存下来。</p>
<h4 id="优化20：（前端）保持单个文件小于25K"><a href="/2017/01/18/提升网站性能的方法总结/#优化20：（前端）保持单个文件小于25K" class="headerlink" title="优化20：（前端）保持单个文件小于25K"></a>优化20：（前端）保持单个文件小于25K</h4><p>这个主要是因为对于IOS是无法缓存超过25KB的文件的，所以需要注意文件的大小。</p>
<p><strong>以上总结来自《高性能网站建设》和Yahoo</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《高性能网站建设》这本书中提到一个网站建设的黄金法则：”只有10%~20%的响应时间花在了下载HTML文档上，其余的80%~90%时间花在了下载页面的所有组件上”。所以，网站性能优化的中点在于如何削减这80%~90%的时间。&lt;/p&gt;
    
    </summary>
    
      <category term="Software Engineering" scheme="/categories/Software-Engineering/"/>
    
    
      <category term="Software Engineering" scheme="/tags/Software-Engineering/"/>
    
      <category term="Performance Optimization" scheme="/tags/Performance-Optimization/"/>
    
      <category term="性能优化" scheme="/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>UNIX编程艺术之系统优化</title>
    <link href="/2017/01/11/UNIX%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF%E4%B9%8B%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    <id>/2017/01/11/UNIX编程艺术之系统优化/</id>
    <published>2017-01-11T11:47:31.000Z</published>
    <updated>2017-03-31T01:37:10.799Z</updated>
    
    <content type="html"><![CDATA[<p>在阅读《Unix编程艺术》这本书时，看到有句话是这么说的:”Premature optimization is the root of all evil.”,文艺地翻译过来就是说，过早的优化简直就是万恶之源。本篇文章总结了下关于项目优化的一些清单。</p>
<a id="more"></a>
<ul>
<li>[x] 程序员工具箱中最强大的优化技术就是不做优化。</li>
<li>[x] 如果有证据证明程序运行缓慢，此时才可以考虑优化。</li>
<li>[x] 代码优化之前需要先考虑代码，应先估量，再实施。</li>
<li>[x] 最有效的优化方法就是保持代码的短小简单。</li>
<li>[x] 缓存操作结果。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在阅读《Unix编程艺术》这本书时，看到有句话是这么说的:”Premature optimization is the root of all evil.”,文艺地翻译过来就是说，过早的优化简直就是万恶之源。本篇文章总结了下关于项目优化的一些清单。&lt;/p&gt;
    
    </summary>
    
      <category term="阅读" scheme="/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Software Engineering" scheme="/tags/Software-Engineering/"/>
    
      <category term="读书笔记" scheme="/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>试试Redis之安装服务</title>
    <link href="/2017/01/11/%E8%AF%95%E8%AF%95Redis%E4%B9%8B%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1/"/>
    <id>/2017/01/11/试试Redis之安装服务/</id>
    <published>2017-01-11T08:47:21.000Z</published>
    <updated>2017-01-11T08:56:17.187Z</updated>
    
    <content type="html"><![CDATA[<p>如果是通过MSI安装包安装的Redis，那么Redis会自动安装一个Windows服务，也就是说不需要再进行额外的安装工作了。如果不是，或者想要修改配置，可以使用redis.windows-service.conf文件进行修改。</p>
<a id="more"></a>
<h3 id="安装Redis服务"><a href="/2017/01/11/试试Redis之安装服务/#安装Redis服务" class="headerlink" title="安装Redis服务"></a>安装Redis服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server --service-install redis.windows.conf --loglever verbos</div></pre></td></tr></table></figure>
<h3 id="卸载服务"><a href="/2017/01/11/试试Redis之安装服务/#卸载服务" class="headerlink" title="卸载服务"></a>卸载服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server --service-uninstall</div></pre></td></tr></table></figure>
<h3 id="启动服务"><a href="/2017/01/11/试试Redis之安装服务/#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server --service-start</div></pre></td></tr></table></figure>
<h3 id="停止服务"><a href="/2017/01/11/试试Redis之安装服务/#停止服务" class="headerlink" title="停止服务"></a>停止服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server --service-stop</div></pre></td></tr></table></figure>
<h3 id="命名服务"><a href="/2017/01/11/试试Redis之安装服务/#命名服务" class="headerlink" title="命名服务"></a>命名服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server --service-name newname</div></pre></td></tr></table></figure>
<h3 id="指定其他属性创建服务"><a href="/2017/01/11/试试Redis之安装服务/#指定其他属性创建服务" class="headerlink" title="指定其他属性创建服务"></a>指定其他属性创建服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">redis-server --service-install --service-name redis1 --port 12345</div></pre></td></tr></table></figure>
<h3 id="启动和关闭指定的服务"><a href="/2017/01/11/试试Redis之安装服务/#启动和关闭指定的服务" class="headerlink" title="启动和关闭指定的服务"></a>启动和关闭指定的服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">redis-server --service-start --service-name yourname</div><div class="line">redis-server --service-start --port yourport</div><div class="line">redis-server --service-stop --service-name yourname</div><div class="line">redis-server --service-stop --port yourport</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果是通过MSI安装包安装的Redis，那么Redis会自动安装一个Windows服务，也就是说不需要再进行额外的安装工作了。如果不是，或者想要修改配置，可以使用redis.windows-service.conf文件进行修改。&lt;/p&gt;
    
    </summary>
    
      <category term="Database" scheme="/categories/Database/"/>
    
    
      <category term="Database" scheme="/tags/Database/"/>
    
      <category term="Redis" scheme="/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>玩转MongoDB之性能调优</title>
    <link href="/2017/01/09/%E7%8E%A9%E8%BD%ACMongoDB%E4%B9%8B%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/"/>
    <id>/2017/01/09/玩转MongoDB之性能调优/</id>
    <published>2017-01-09T06:14:44.000Z</published>
    <updated>2017-01-10T01:52:04.425Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB由于是将数据加载到内存后进行操作，所以其速度与并发速度相对于传统的磁盘数据库有巨大的飞跃，但是，并不是所有的场景都适合适用MongoDB数据库来存储。比如，由于MongoDB的事务性很弱，或者说基本没有，所以不适合将MongoDB用于高度事务性质的项目中（当然可以程序控制逻辑事务）。MongoDB对于实时的增删改查操作友好，可以进行分布式的集群、动态的增删节点（网上参考，笔者未实践过）。<br><a id="more"></a></p>
<h4 id="数据准备"><a href="/2017/01/09/玩转MongoDB之性能调优/#数据准备" class="headerlink" title="数据准备"></a>数据准备</h4><p>每次10万条数据，每次递增10万插入新数据，测试每次数据量下的操作速度，插入脚本如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> count=<span class="number">7500000</span>;count&lt;<span class="number">10000000</span>;count++)&#123;</div><div class="line">   <span class="keyword">var</span> tmp = count%<span class="number">2</span>==<span class="number">0</span>?count:(<span class="number">0</span>-count);</div><div class="line">   <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">   <span class="keyword">var</span> demo = &#123;</div><div class="line">      <span class="string">"a"</span>:<span class="string">"a is a string"</span>,</div><div class="line">      <span class="string">"b"</span>:<span class="string">"123"</span>,</div><div class="line">      <span class="string">"c"</span>: count+<span class="number">1</span>,</div><div class="line">      <span class="string">"d"</span>: &#123;</div><div class="line">         <span class="string">"d1"</span>:<span class="string">"d1 is a string"</span>,</div><div class="line">         <span class="string">"d2"</span>:<span class="string">"123"</span>,</div><div class="line">         <span class="string">"d3"</span>: tmp,</div><div class="line">         <span class="string">"d7"</span>: tmp,</div><div class="line">         <span class="string">"d4"</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>],</div><div class="line">         <span class="string">"d5"</span>:[<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>]         </div><div class="line">      &#125;,</div><div class="line">      <span class="string">"d6"</span>: date</div><div class="line">   &#125;;</div><div class="line">   db.TestIndexes.insert(demo);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>数据结构如下所示：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"_id"</span> : ObjectId(<span class="string">"587330f80f5dc508c0b0be13"</span>),</div><div class="line">    <span class="attr">"a"</span> : <span class="string">"a is a string"</span>,</div><div class="line">    <span class="attr">"b"</span> : <span class="string">"123"</span>,</div><div class="line">    <span class="attr">"c"</span> : <span class="number">5.0</span>,</div><div class="line">    <span class="attr">"d"</span> : &#123;</div><div class="line">        <span class="attr">"d1"</span> : <span class="string">"d1 is a string"</span>,</div><div class="line">        <span class="attr">"d2"</span> : <span class="string">"123"</span>,</div><div class="line">        <span class="attr">"d3"</span> : <span class="number">5.0</span>,</div><div class="line">        <span class="attr">"d4"</span> : [ </div><div class="line">            <span class="number">1.0</span>,<span class="number">2.0</span>,<span class="number">3.0</span>,<span class="number">4.0</span>,<span class="number">5.0</span>,<span class="number">6.0</span>,<span class="number">7.0</span>,<span class="number">8.0</span>,<span class="number">9.0</span>,<span class="number">10.0</span></div><div class="line">        ],</div><div class="line">        <span class="attr">"d5"</span> : [ <span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="查询实验"><a href="/2017/01/09/玩转MongoDB之性能调优/#查询实验" class="headerlink" title="查询实验"></a>查询实验</h4><p>1、根据_id查询，_id本身具有索引，根据_id查询指定数据</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.TestIndexes.find(&#123;<span class="string">"_id"</span>:ObjectId(<span class="string">"587330f80f5dc508c0b0be13"</span>)&#125;);</div></pre></td></tr></table></figure>
<p>2、根据无索引字段c查询</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.TestIndexes.find(&#123;<span class="string">"c"</span>:<span class="number">1000</span>&#125;);</div></pre></td></tr></table></figure>
<p>3、对d.d3加入索引</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.TestIndexes.createIndex(&#123;<span class="string">"d.d3"</span>:<span class="number">1</span>&#125;);</div></pre></td></tr></table></figure>
<p>查询语句同2</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.TestIndexes.find(&#123;<span class="string">"d.d3"</span>:<span class="number">1000</span>&#125;);</div></pre></td></tr></table></figure>
<p>自动化查询语句</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n=<span class="number">10</span>;</div><div class="line"><span class="keyword">var</span> ret1=<span class="number">0</span>,ret2=<span class="number">0</span>,ret3=<span class="number">0</span>,ret4=<span class="number">0</span>,ret5=<span class="number">0</span>,</div><div class="line">    ret6=<span class="number">0</span>,ret7=<span class="number">0</span>,ret8=<span class="number">0</span>,ret9=<span class="number">0</span>,reta=<span class="number">0</span>,retb=<span class="number">0</span>,retc=<span class="number">0</span>,retd=<span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line"></div><div class="line">    ret1 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">        .find(&#123;<span class="string">"_id"</span>: ObjectId(<span class="string">'587330f80f5dc508c0b0be13'</span>)&#125;)</div><div class="line">        .explain(<span class="string">"executionStats"</span>)</div><div class="line">        .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    ret2 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">        .find(&#123;<span class="string">"c"</span>:<span class="number">1000</span>&#125;)</div><div class="line">        .explain(<span class="string">"executionStats"</span>)</div><div class="line">        .executionStats.executionTimeMillis;</div><div class="line">    </div><div class="line">    ret3 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;<span class="string">"d.d3"</span>:<span class="number">7580</span>&#125;)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    ret4 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;<span class="string">"d.d4"</span>:<span class="number">6.0</span>&#125;)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    ret5 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;<span class="string">"d.d5"</span>:<span class="number">7.0</span>&#125;)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    ret6 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;&#125;)</div><div class="line">       .limit(<span class="number">40</span>)</div><div class="line">       .skip(<span class="number">20</span>)</div><div class="line">       .explain(<span class="string">"executionStats"</span>).executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    ret7 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;<span class="string">"c"</span>:&#123;<span class="string">"$gt"</span>:<span class="number">12</span>&#125;&#125;)</div><div class="line">       .limit(<span class="number">40</span>)</div><div class="line">       .skip(<span class="number">20</span>)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    ret8 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;<span class="string">"c"</span>:&#123;<span class="string">"$gt"</span>:<span class="number">12</span>&#125;,<span class="string">"d.d3"</span>:&#123;<span class="string">"$mod"</span>:[<span class="number">2</span>,<span class="number">0</span>]&#125;&#125;)</div><div class="line">       .limit(<span class="number">40</span>)</div><div class="line">       .skip(<span class="number">20</span>)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    ret9 += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;&#125;)</div><div class="line">       .sort(&#123;<span class="string">"d6"</span>:<span class="number">-1</span>&#125;)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line">    </div><div class="line">    reta += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;&#125;)</div><div class="line">       .sort(&#123;<span class="string">"d.d3"</span>:<span class="number">-1</span>&#125;)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line">    </div><div class="line">    retb += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;&#125;)</div><div class="line">       .sort(&#123;<span class="string">"d.d7"</span>:<span class="number">-1</span>&#125;)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    retc += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;&#125;,&#123;<span class="string">"_id"</span>:<span class="number">1</span>,<span class="string">"c"</span>:<span class="number">1</span>&#125;)</div><div class="line">       .limit(<span class="number">10</span>)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;</div><div class="line"></div><div class="line">    retd += db.getCollection(<span class="string">'TestIndexes'</span>)</div><div class="line">       .find(&#123;&#125;)</div><div class="line">       .limit(<span class="number">10</span>)</div><div class="line">       .explain(<span class="string">"executionStats"</span>)</div><div class="line">       .executionStats.executionTimeMillis;   </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> result = &#123;</div><div class="line">    <span class="string">"查询_id"</span>: ret1/n,</div><div class="line">    <span class="string">"查询c(无索引)"</span>: ret2/n,</div><div class="line">    <span class="string">"查询d.d3(有索引)"</span>: ret3/n,</div><div class="line">    <span class="string">"查询d.d4(无索引)"</span>: ret4/n,</div><div class="line">    <span class="string">"查询d.d5(有索引)"</span>: ret5/n,</div><div class="line">    <span class="string">"分页(0条件)"</span>: ret6/n,</div><div class="line">    <span class="string">"分页(1条件)"</span>: ret7/n,</div><div class="line">    <span class="string">"分页(n条件)"</span>: ret8/n,</div><div class="line">    <span class="string">"排序(时间)"</span>: ret9/n,</div><div class="line">    <span class="string">"排序(字段,无索引)"</span>: reta/n,</div><div class="line">    <span class="string">"排序(字段,有索引)"</span>: retb/n,</div><div class="line">    <span class="string">"查询(无过滤)"</span>: retc/n,</div><div class="line">    <span class="string">"查询(有过滤)"</span>: retd/n</div><div class="line">&#125;</div><div class="line">printjson(result);</div></pre></td></tr></table></figure>
<h4 id="结果记录"><a href="/2017/01/09/玩转MongoDB之性能调优/#结果记录" class="headerlink" title="结果记录"></a>结果记录</h4><table>
<thead>
<tr>
<th style="text-align:left">检测项目</th>
<th style="text-align:right">10w</th>
<th style="text-align:right">20w</th>
<th style="text-align:right">30w</th>
<th style="text-align:right">40w</th>
<th style="text-align:right">50w</th>
<th style="text-align:right">60w</th>
<th style="text-align:right">70w</th>
<th style="text-align:right">80w</th>
<th style="text-align:right">90w</th>
<th style="text-align:right">100w</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">查询_id</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">查询c(无索引)</td>
<td style="text-align:right">52.2</td>
<td style="text-align:right">101.1</td>
<td style="text-align:right">120.6</td>
<td style="text-align:right">127.6</td>
<td style="text-align:right">130.5</td>
<td style="text-align:right">154.3</td>
<td style="text-align:right">149.5</td>
<td style="text-align:right">165.1</td>
<td style="text-align:right">135.4</td>
<td style="text-align:right">157.7</td>
</tr>
<tr>
<td style="text-align:left">查询d.d3(有索引)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">查询d.d4(无索引)</td>
<td style="text-align:right">124.4</td>
<td style="text-align:right">248.9</td>
<td style="text-align:right">317.4</td>
<td style="text-align:right">376.5</td>
<td style="text-align:right">326.6</td>
<td style="text-align:right">327.9</td>
<td style="text-align:right">342.3</td>
<td style="text-align:right">325.8</td>
<td style="text-align:right">443.4</td>
<td style="text-align:right">324.1</td>
</tr>
<tr>
<td style="text-align:left">查询d.d5(有索引)</td>
<td style="text-align:right">111.4</td>
<td style="text-align:right">218</td>
<td style="text-align:right">261.1</td>
<td style="text-align:right">267.7</td>
<td style="text-align:right">272.6</td>
<td style="text-align:right">260.2</td>
<td style="text-align:right">283.2</td>
<td style="text-align:right">262.9</td>
<td style="text-align:right">294.1</td>
<td style="text-align:right">269.7</td>
</tr>
<tr>
<td style="text-align:left">分页(0条件)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">分页(1条件)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">分页(n条件))</td>
<td style="text-align:right">44.7</td>
<td style="text-align:right">79.3</td>
<td style="text-align:right">84.7</td>
<td style="text-align:right">90.6</td>
<td style="text-align:right">82.3</td>
<td style="text-align:right">75.9</td>
<td style="text-align:right">92.2</td>
<td style="text-align:right">75.2</td>
<td style="text-align:right">80</td>
<td style="text-align:right">88.3</td>
</tr>
<tr>
<td style="text-align:left">排序(时间)</td>
<td style="text-align:right">195.8</td>
<td style="text-align:right">192.2</td>
<td style="text-align:right">154.4</td>
<td style="text-align:right">93.4</td>
<td style="text-align:right">95.7</td>
<td style="text-align:right">75.7</td>
<td style="text-align:right">57.9</td>
<td style="text-align:right">58.1</td>
<td style="text-align:right">38.6</td>
<td style="text-align:right">38.2</td>
</tr>
<tr>
<td style="text-align:left">排序(字段,无索引)</td>
<td style="text-align:right">136.7</td>
<td style="text-align:right">263.9</td>
<td style="text-align:right">263.9</td>
<td style="text-align:right">240.7</td>
<td style="text-align:right">307.8</td>
<td style="text-align:right">290.2</td>
<td style="text-align:right">248.8</td>
<td style="text-align:right">290.3</td>
<td style="text-align:right">214.3</td>
<td style="text-align:right">241.1</td>
</tr>
<tr>
<td style="text-align:left">排序(字段,有索引)</td>
<td style="text-align:right">102.7</td>
<td style="text-align:right">209.9</td>
<td style="text-align:right">221.2</td>
<td style="text-align:right">261.6</td>
<td style="text-align:right">211.4</td>
<td style="text-align:right">253.8</td>
<td style="text-align:right">275.4</td>
<td style="text-align:right">255.4</td>
<td style="text-align:right">238.1</td>
<td style="text-align:right">262.3</td>
</tr>
<tr>
<td style="text-align:left">查询(无过滤)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">查询(有过滤)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">检测项目</th>
<th style="text-align:right">120w</th>
<th style="text-align:right">140w</th>
<th style="text-align:right">160w</th>
<th style="text-align:right">180w</th>
<th style="text-align:right">200w</th>
<th style="text-align:right">250w</th>
<th style="text-align:right">300w</th>
<th style="text-align:right">500w</th>
<th style="text-align:right">750w</th>
<th style="text-align:right">1000w</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">查询_id</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">查询c(无索引)</td>
<td style="text-align:right">185.2</td>
<td style="text-align:right">144</td>
<td style="text-align:right">166.8</td>
<td style="text-align:right">185.9</td>
<td style="text-align:right">204.7</td>
<td style="text-align:right">133.5</td>
<td style="text-align:right">157.2</td>
<td style="text-align:right">299.6</td>
<td style="text-align:right">1477.4</td>
<td style="text-align:right">1132.3</td>
</tr>
<tr>
<td style="text-align:left">查询d.d3(有索引)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">查询d.d4(无索引)</td>
<td style="text-align:right">337.3</td>
<td style="text-align:right">386.9</td>
<td style="text-align:right">440.4</td>
<td style="text-align:right">194.7</td>
<td style="text-align:right">271.5</td>
<td style="text-align:right">348.9</td>
<td style="text-align:right">422.1</td>
<td style="text-align:right">725.3</td>
<td style="text-align:right">1048.8</td>
<td style="text-align:right">13584</td>
</tr>
<tr>
<td style="text-align:left">查询d.d5(有索引)</td>
<td style="text-align:right">261.4</td>
<td style="text-align:right">302.8</td>
<td style="text-align:right">349.5</td>
<td style="text-align:right">196.7</td>
<td style="text-align:right">217.5</td>
<td style="text-align:right">270.7</td>
<td style="text-align:right">326</td>
<td style="text-align:right">-</td>
<td style="text-align:right">807.6</td>
<td style="text-align:right">1346.7</td>
</tr>
<tr>
<td style="text-align:left">分页(0条件)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">分页(1条件)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">分页(n条件))</td>
<td style="text-align:right">72</td>
<td style="text-align:right">83.7</td>
<td style="text-align:right">96.7</td>
<td style="text-align:right">53.7</td>
<td style="text-align:right">59.5</td>
<td style="text-align:right">73.5</td>
<td style="text-align:right">87.7</td>
<td style="text-align:right">-</td>
<td style="text-align:right">1322</td>
<td style="text-align:right">1350.7</td>
</tr>
<tr>
<td style="text-align:left">排序(时间)</td>
<td style="text-align:right">38</td>
<td style="text-align:right">38</td>
<td style="text-align:right">38.7</td>
<td style="text-align:right">19.3</td>
<td style="text-align:right">19.5</td>
<td style="text-align:right">18.5</td>
<td style="text-align:right">18.5</td>
<td style="text-align:right">0</td>
<td style="text-align:right">187.7</td>
<td style="text-align:right">194.6</td>
</tr>
<tr>
<td style="text-align:left">排序(字段,无索引)</td>
<td style="text-align:right">280.7</td>
<td style="text-align:right">321.2</td>
<td style="text-align:right">183.2</td>
<td style="text-align:right">205.8</td>
<td style="text-align:right">227.6</td>
<td style="text-align:right">283.2</td>
<td style="text-align:right">321</td>
<td style="text-align:right">-</td>
<td style="text-align:right">827.2</td>
<td style="text-align:right">1057.7</td>
</tr>
<tr>
<td style="text-align:left">排序(字段,有索引)</td>
<td style="text-align:right">252.4</td>
<td style="text-align:right">147.6</td>
<td style="text-align:right">168.4</td>
<td style="text-align:right">189.7</td>
<td style="text-align:right">208.6</td>
<td style="text-align:right">256.2</td>
<td style="text-align:right">0</td>
<td style="text-align:right">-</td>
<td style="text-align:right">1484.8</td>
<td style="text-align:right">1410</td>
</tr>
<tr>
<td style="text-align:left">查询(无过滤)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
<tr>
<td style="text-align:left">查询(有过滤)</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
</tr>
</tbody>
</table>
<h4 id="有无索引的区别"><a href="/2017/01/09/玩转MongoDB之性能调优/#有无索引的区别" class="headerlink" title="有无索引的区别"></a>有无索引的区别</h4><p>1000w数据量下，对d.d7字段分别进行有索引和无索引情况下的指定记录查询。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.getCollection(<span class="string">'TestIndexes'</span>).find(&#123;<span class="string">"d.d7"</span>:<span class="number">-9</span>&#125;).explain(<span class="string">"executionStats"</span>)</div></pre></td></tr></table></figure>
<p>创建索引时，操作时间为 0ms<br>取消索引时，操作时间为 5519ms</p>
<p>所以索引对于查询的优化效率不言而喻。</p>
<h4 id="调优总结"><a href="/2017/01/09/玩转MongoDB之性能调优/#调优总结" class="headerlink" title="调优总结"></a>调优总结</h4><ul>
<li>在查询条件、排序条件、统计条件的字段上选择创建索引,对于不同的索引（比如单键索引，数组索引，复合索引等等）需要分开对待。</li>
<li>在创建索引操作时，应当后台运行，降低对性能的影响（拥有数据后才创建索引的情况下）。</li>
<li>使用limit()限定返回结果集的大小，减少数据库服务器的资源消耗，以及网络传输的数据量。</li>
<li>只查询使用到的字段，而不查询所有字段。</li>
<li>基于Mongodb分布式集群做数据分析时，MapReduce性能优于count、distinct、group等聚合函数。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB由于是将数据加载到内存后进行操作，所以其速度与并发速度相对于传统的磁盘数据库有巨大的飞跃，但是，并不是所有的场景都适合适用MongoDB数据库来存储。比如，由于MongoDB的事务性很弱，或者说基本没有，所以不适合将MongoDB用于高度事务性质的项目中（当然可以程序控制逻辑事务）。MongoDB对于实时的增删改查操作友好，可以进行分布式的集群、动态的增删节点（网上参考，笔者未实践过）。&lt;br&gt;
    
    </summary>
    
      <category term="Database" scheme="/categories/Database/"/>
    
    
      <category term="Database" scheme="/tags/Database/"/>
    
      <category term="MongoDB" scheme="/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>ASP.Net实现页面跳转的方法</title>
    <link href="/2017/01/09/ASP-Net%E5%AE%9E%E7%8E%B0%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>/2017/01/09/ASP-Net实现页面跳转的方法/</id>
    <published>2017-01-09T04:59:59.000Z</published>
    <updated>2017-03-30T12:31:19.923Z</updated>
    
    <content type="html"><![CDATA[<p>在ASP.NET中，即使用C#编写的WEB项目中，服务端对前端页面的路由控制在不同的情况下使用不同的方式对页面进行跳转控制。总的来说，主要具有七种不同的方式可以实现。</p>
<a id="more"></a>
<h4 id="方式一-Response-Rediect"><a href="/2017/01/09/ASP-Net实现页面跳转的方法/#方式一-Response-Rediect" class="headerlink" title="方式一: Response.Rediect()"></a>方式一: Response.Rediect()</h4><p><strong>原理：</strong>服务端发送HTTP重定向状态码(302)到客户端，客户端接收到重定向指令后，按照需要重定向的路径重新向服务端发起请求。<br><strong>优点：</strong>可以跳转到任意页面，无类似于浏览器的同源策略的限制，即可从A站点跳转到B站点。<br><strong>缺点：</strong>速度慢，需要两次请求，无法保存请求携带的数据。<br><strong>示例：</strong></p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">System.Web.HttpContext.Current.Response.Rediect(<span class="string">"http://www.hummingman.cc"</span>,<span class="literal">true</span>);</div><div class="line">System.Web.HttpContext.Current.Response.End();</div></pre></td></tr></table></figure>
<p>其中，第二个参数表示，是否终止当前页面的执行。</p>
<h4 id="方式二-Server-Transfer"><a href="/2017/01/09/ASP-Net实现页面跳转的方法/#方式二-Server-Transfer" class="headerlink" title="方式二: Server.Transfer()"></a>方式二: Server.Transfer()</h4><p><strong>原理：</strong>转发机制，从A页面跳转到B页面，无重定向过程，所以地址不变，但是页面改变。<br><strong>优点：</strong>可以跳过登录验证，一次返回，速度快。<br><strong>缺点：</strong>只能转发到同一个站点下的其他页面。<br><strong>示例：</strong></p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">System.Web.HttpContext.Current.Response.Server.Transfer(<span class="string">"http://www.hummingman.cc"</span>,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
<p>其中，第二个参数表示，是否携带当前表单中的内容。</p>
<h4 id="方式三-Server-Execute"><a href="/2017/01/09/ASP-Net实现页面跳转的方法/#方式三-Server-Execute" class="headerlink" title="方式三: Server.Execute()"></a>方式三: Server.Execute()</h4><p><strong>原理：</strong>将一个页面的输出结果插入到另一个aspx页面，即先跳转到一个新的页面，再返回原页面。<br><strong>优点：</strong>目标页面和原页面可以在同一个服务器上。<br><strong>缺点：</strong>只能转发到同一个站点下的其他页面。<br><strong>示例：</strong></p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">System.Web.HttpContext.Current.Response.Server.Execute(<span class="string">"http://www.hummingman.cc"</span>,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
<p>其中，第二个参数表示，是否携带当前表单中的内容。</p>
<h4 id="方式四：Response-Write"><a href="/2017/01/09/ASP-Net实现页面跳转的方法/#方式四：Response-Write" class="headerlink" title="方式四：Response.Write()"></a>方式四：Response.Write()</h4><p><strong>原理：</strong>直接写入前端页面代码。<br><strong>缺点：</strong>前后端耦合严重，后端直接参与前端页面代码，不推荐。<br><strong>示例:</strong></p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Response.Write(<span class="string">"&lt;script&gt;window.location=\"http://www.hummingman.cc\"&lt;/script&gt;"</span>);</div></pre></td></tr></table></figure>
<h4 id="不同方法的使用场景"><a href="/2017/01/09/ASP-Net实现页面跳转的方法/#不同方法的使用场景" class="headerlink" title="不同方法的使用场景"></a>不同方法的使用场景</h4><p>1、如果要让用户来决定何时转换页面以及转到哪一个页面，前端超链接比较合适，比如导航栏等。<br>2、如果要把用户连接到另一台服务器上的资源，即跳转到其他服务器的页面，使用Response.Rediect()。<br>3、如果要跳转到其他的静态HTML页面，使用Response.Rediect()。<br>4、如果要将查询字符串作为URL的一部分，使用Response.Redirct()。<br>5、如果要将执行的流程转发到另外一个ASPX页面，使用Server.Transfer()。<br>6、如果要捕获一个ASPX页面的输出结果并插入到新的ASPX页面中，使用Server.Execute()。<br>7、如果要确保合法的HTML，使用Response.Rediect()。</p>
<h4 id="其他"><a href="/2017/01/09/ASP-Net实现页面跳转的方法/#其他" class="headerlink" title="其他"></a>其他</h4><p>在前后分离盛行的时代，使用Response.Rediect()方法和Server.Transfer()方法是最为合适的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在ASP.NET中，即使用C#编写的WEB项目中，服务端对前端页面的路由控制在不同的情况下使用不同的方式对页面进行跳转控制。总的来说，主要具有七种不同的方式可以实现。&lt;/p&gt;
    
    </summary>
    
      <category term="ASP.Net" scheme="/categories/ASP-Net/"/>
    
    
      <category term="ASP.Net" scheme="/tags/ASP-Net/"/>
    
  </entry>
  
  <entry>
    <title>X:Rebirth Home Of Light Guide</title>
    <link href="/2016/12/05/X-Rebirth-Home-Of-Light-Guide/"/>
    <id>/2016/12/05/X-Rebirth-Home-Of-Light-Guide/</id>
    <published>2016-12-05T05:09:55.000Z</published>
    <updated>2016-12-05T05:21:34.958Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍了如何玩《X重生：光之家园》这个游戏。</p>
<a id="more"></a>
<h3 id="The-universe"><a href="/2016/12/05/X-Rebirth-Home-Of-Light-Guide/#The-universe" class="headerlink" title="The universe"></a>The universe</h3><ul>
<li>At the top, we have the <strong>galaxy</strong>. The galaxy is basically everything in the x-universe. Think of it as the world (Earth) to make things easier. </li>
<li>Now Earth is divied into smaller sections called <strong>sectors</strong>.</li>
<li>Each cluster is split into <strong>sectors</strong>. </li>
<li>Sectors is split into <strong>zones</strong>.</li>
<li><strong>Local highway</strong> is designed to connect different zones.</li>
<li><strong>Super highway</strong> is designed to connect different sectors.</li>
<li><strong>Gate</strong> is designed to connect different clusters.</li>
<li>Super-highways are blue and local-highways are green.</li>
</ul>
<h3 id="Platforms"><a href="/2016/12/05/X-Rebirth-Home-Of-Light-Guide/#Platforms" class="headerlink" title="Platforms"></a>Platforms</h3><p> In X-Rebirth we land on platforms, so that we can talk to people about the services they offer. The range of services includes recruitment, ship repairs, mission objectives, trade, ship upgrades etc. Landing on platforms also gives you the chance to look at varoius people. </p>
<ul>
<li>Bar platforms</li>
<li>Drnoe</li>
<li>Shipyard</li>
<li>Headquarters</li>
<li>Repair platform</li>
<li>Trade platform</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍了如何玩《X重生：光之家园》这个游戏。&lt;/p&gt;
    
    </summary>
    
      <category term="游戏" scheme="/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="Game" scheme="/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>致X君</title>
    <link href="/2016/12/04/To-Li/"/>
    <id>/2016/12/04/To-Li/</id>
    <published>2016-12-04T01:27:12.000Z</published>
    <updated>2017-03-30T12:03:41.369Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><span id="encrypt-message">该文章已加密或已损坏.</span><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">确认</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      该文章已加密或已损坏.
    
    </summary>
    
      <category term="随笔" scheme="/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔集</title>
    <link href="/2016/11/25/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    <id>/2016/11/25/随笔集/</id>
    <published>2016-11-25T03:45:45.000Z</published>
    <updated>2017-03-30T12:08:02.911Z</updated>
    
    <content type="html"><![CDATA[<p>人生若只如初见，何事秋风悲画扇。大概经历得多了，便觉得多了一些偏见与执念。所以善始者繁，善终者却很少。于是初次见面的时候，彼此了解甚少，所以各自展现自己最好的一面，也各自接受对方最好的一面。在一个阶段刚踏足的时候，往往以昂然的心态去面对。时光匆匆，当我们失去了这个新鲜感，褪去了伊始靓丽的颜色，便开始感叹，人生，若能保持开始时的美好，该有多好。 <strong>– 开始的美好</strong></p>
<a id="more"></a>
<hr>
<p>小时候，我家住在一栋的三层楼房里，一楼是客厅和厨房，二楼则是卧室，三楼只有哥哥和大姐回来或者是客人来的时候才会整理出来，平时则是储物的地方。由于每层楼的摆设、结构基本一模一样，所以，每次我和二姐玩耍的时候，总要吐槽一下这个房子的设计。有一天，妈妈突然问我，“你觉得搬家怎么样？”，我一听，内心欢喜极了，心想着可以到新的地方玩了，于是我激动地回答道，“好啊好啊”。我记得妈妈当时那种强颜欢笑的感觉，只是在我们面前，依然笑靥如初。长大后回想起来，才知道，那次搬家，是后来颠沛流离与寄人篱下生活的开始。 <strong>– 关于搬家</strong></p>
<hr>
<p>初生牛犊的程序员在软件开发中总会遇到一些坎坷与牵绊，究其本质，可以归纳为不确定性。理想与现实总是存在差距的，这种差距也加大了不确定性。打个比方，你独立负责一个系统的设计，设计开起来堪称完美，心想着，这要是做完了，一定能大放异彩。于是，自以为完美地啪啦啪啦地开始代码实现了。慢慢地，你发现，有太多的地方设计不完善，对于敏捷的需求变动无法实现即时适应，对于系统的性能无法保证，对于系统的交互无法确定。总而言之，你开始忧虑起来，因为自己的设计渐渐产生负面的效应，你开始反思与怀疑自己的设计，你开始无法确定系统能否按照正常计划实现。<strong>–不确定性</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人生若只如初见，何事秋风悲画扇。大概经历得多了，便觉得多了一些偏见与执念。所以善始者繁，善终者却很少。于是初次见面的时候，彼此了解甚少，所以各自展现自己最好的一面，也各自接受对方最好的一面。在一个阶段刚踏足的时候，往往以昂然的心态去面对。时光匆匆，当我们失去了这个新鲜感，褪去了伊始靓丽的颜色，便开始感叹，人生，若能保持开始时的美好，该有多好。 &lt;strong&gt;– 开始的美好&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>软件开发原则</title>
    <link href="/2016/11/24/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%8E%9F%E5%88%99/"/>
    <id>/2016/11/24/软件开发原则/</id>
    <published>2016-11-24T02:17:41.000Z</published>
    <updated>2016-12-16T05:46:13.677Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<ol>
<li>代码规范</li>
<li>系统耦合</li>
<li>系统性能</li>
<li>数据完整</li>
<li>系统健壮</li>
<li>数据库设计</li>
<li>异常捕获与处理+日志记录</li>
<li>接口安全</li>
<li>系统兼容性(版本向下兼容，前端跨浏览器兼容)<br>A. 事务安全</li>
</ol>
<hr>
<h3 id="软件开发箴言"><a href="/2016/11/24/软件开发原则/#软件开发箴言" class="headerlink" title="软件开发箴言"></a>软件开发箴言</h3><ul>
<li>任何傻瓜都能写出计算机可以理解的代码。好的程序员能写出人能读懂的代码 —— Martin Fowler</li>
<li>简单不先于复杂，而是在复杂之后 —— Alan Perlis</li>
<li>Real developers ship —— Jeff Attwood</li>
<li>过去的33年里，我每天早上看着镜子问自己：“今天是我生命的最后一天吗？我是否要去做今天该做的事？”一天一天太多次 是“不是”，我知道这需要改变…所有的事情 —— 所有身外的期望，所有的骄傲，所有的对困难和失败的恐惧 —— 这些东西在死亡面前立刻消失的无影无踪，只剩下真正重要的东西。想着自己即将死去，这是让我避免落入担心失去什么的陷阱里的最好的方法。—— Steve Jobs</li>
</ul>
<h3 id="软件开发"><a href="/2016/11/24/软件开发原则/#软件开发" class="headerlink" title="软件开发"></a>软件开发</h3><ul>
<li>收到策划稿永远不要立马写代码实现，而是要对所有的需求进行分析和归纳，并抽象出整体业务体系和程序架构。</li>
<li>高内聚，低耦合。各自负责各自的事情，减少模块间耦合性。</li>
<li>异常检测机制与日志管理。规定好异常，作好异常捕获与处理工作，并对业务、框架等进行日志记录。这部分在脱离开发环境后极为有用。</li>
</ul>
<h3 id="身份认证"><a href="/2016/11/24/软件开发原则/#身份认证" class="headerlink" title="身份认证"></a>身份认证</h3>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;代码规范&lt;/li&gt;
&lt;li&gt;系统耦合&lt;/li&gt;
&lt;li&gt;系统性能&lt;/li&gt;
&lt;li&gt;数据完整&lt;/li&gt;
&lt;li&gt;系统健壮&lt;/li&gt;
&lt;li&gt;数据库设计&lt;/li&gt;
&lt;li&gt;异常捕获与处理+日志记录&lt;/li&gt;
&lt;li&gt;接口安全&lt;/
    
    </summary>
    
      <category term="Software Engineering" scheme="/categories/Software-Engineering/"/>
    
    
      <category term="Software Engineering" scheme="/tags/Software-Engineering/"/>
    
  </entry>
  
</feed>
